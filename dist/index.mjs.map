{"version":3,"file":"index.mjs","sources":["../src/scales.ts","../src/interactions.ts","../src/drawing.ts","../src/chart.ts","../src/api/volume-footprint-series-api.ts","../src/api/time-scale-api.ts","../src/api/price-scale-api.ts","../src/api/chart-api.ts","../src/api/create-chart.ts"],"sourcesContent":["import { CandleData } from './types';\n\nexport class Scales {\n  private data: CandleData[] = [];\n  private margin: { top: number; bottom: number; left: number; right: number };\n  private view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number };\n  private canvasWidth: number;\n  private canvasHeight: number;\n  private TICK: number;\n  private baseRowPx: number;\n  private TEXT_VIS: { minZoomX: number; minRowPx: number; minBoxPx: number };\n\n  constructor(\n    data: CandleData[],\n    margin: { top: number; bottom: number; left: number; right: number },\n    view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number },\n    canvasWidth: number,\n    canvasHeight: number,\n    TICK: number,\n    baseRowPx: number,\n    TEXT_VIS: { minZoomX: number; minRowPx: number; minBoxPx: number }\n  ) {\n    this.data = data;\n    this.margin = margin;\n    this.view = view;\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.TICK = TICK;\n    this.baseRowPx = baseRowPx;\n    this.TEXT_VIS = TEXT_VIS;\n  }\n\n  chartHeight(): number {\n    return this.canvasHeight - this.margin.top - this.margin.bottom;\n  }\n\n  rowHeightPx(): number {\n    return this.baseRowPx * this.view.zoomY;\n  }\n\n  scaledSpacing(): number {\n    return 132 * this.view.zoomX; // Reduced spacing for closer candle layout\n  }\n\n  scaledCandle(): number {\n    return 15 * this.view.zoomX; // BASE_CANDLE * zoomX\n  }\n\n  scaledBox(): number {\n    return 55 * this.view.zoomX; // BASE_BOX * zoomX\n  }\n\n  scaledImb(): number {\n    return 3 * this.view.zoomX; // Thinner imbalance boxes\n  }\n\n  shouldShowCellText(): boolean {\n    return (\n      this.view.zoomX >= this.TEXT_VIS.minZoomX &&\n      this.rowHeightPx() >= this.TEXT_VIS.minRowPx &&\n      this.scaledBox() >= this.TEXT_VIS.minBoxPx\n    );\n  }\n\n  priceToRowIndex(price: number): number {\n    return (this.ladderTop - price) / this.TICK + this.view.offsetRows;\n  }\n\n  rowIndexToPrice(row: number): number {\n    return this.ladderTop - (row - this.view.offsetRows) * this.TICK;\n  }\n\n  rowToY(row: number): number {\n    return this.margin.top + row * this.rowHeightPx();\n  }\n\n  priceToY(price: number): number {\n    return this.rowToY(this.priceToRowIndex(price));\n  }\n\n  indexToX(i: number, startIndex: number): number {\n    const s = this.scaledSpacing();\n    return this.margin.left + (i - startIndex) * s + s / 2 - this.xShift;\n  }\n\n  getVisibleRange(): { startIndex: number; endIndex: number } {\n    const s = this.scaledSpacing();\n    const pixelOffset = this.view.offsetX;\n    const startFloat = pixelOffset / s;\n    const startIndex = Math.max(0, Math.floor(startFloat));\n    const contentW = this.canvasWidth - this.margin.left - this.margin.right;\n    const visibleCount = Math.ceil(contentW / s) + 2;\n    const endIndex = Math.min(this.data.length, startIndex + visibleCount);\n    return { startIndex, endIndex };\n  }\n\n  computePriceBarLabels(): Array<{ price: number; y: number }> {\n    const pixelSpacing = 28;\n    const chartHeightPx = this.chartHeight();\n    const maxLabels = 7;\n    const numLabels = Math.min(maxLabels, Math.floor(chartHeightPx / pixelSpacing));\n\n    const pTop = this.rowIndexToPrice(0);\n    const pBot = this.rowIndexToPrice(Math.floor(chartHeightPx / this.rowHeightPx()));\n    const pMin = Math.min(pTop, pBot);\n    const pMax = Math.max(pTop, pBot);\n    const priceRange = pMax - pMin;\n\n    const stepPrice = Math.max(this.TICK, priceRange / Math.max(1, numLabels - 1));\n\n    let start = Math.ceil(pMin / stepPrice) * stepPrice;\n    const out = [];\n    for (let price = start; price <= pMax + 1e-6; price += stepPrice) {\n      out.push({ price: Math.round(price), y: this.priceToY(price) });\n    }\n    return out;\n  }\n\n  formatK(v: number): string {\n    const a = Math.abs(v);\n    if (a >= 1e6) return (v / 1e6).toFixed(2) + \"M\";\n    if (a >= 1e3) return (v / 1e3).toFixed(2) + \"K\";\n    return Math.round(v).toString();\n  }\n\n  private get xShift(): number {\n    const s = this.scaledSpacing();\n    const pixelOffset = this.view.offsetX;\n    const startFloat = pixelOffset / s;\n    const startIndex = Math.max(0, Math.floor(startFloat));\n    const shift = pixelOffset - startIndex * s;\n    return shift < 0 ? shift + s : shift;\n  }\n\n  screenXToDataIndex(screenX: number): number {\n    const vr = this.getVisibleRange();\n    const s = this.scaledSpacing();\n    const relativeX = screenX - this.margin.left + this.xShift - s / 2;\n    return vr.startIndex + Math.floor(relativeX / s);\n  }\n\n  private get ladderTop(): number {\n    if (this.data.length === 0) return 10000;\n    return Math.ceil(Math.max(...this.data.map(c => c.high)) / this.TICK) * this.TICK + 10 * this.TICK;\n  }\n}","import { VFCEvents } from './types';\n\nexport class Interactions {\n  private canvas: HTMLCanvasElement;\n  private margin: { top: number; bottom: number; left: number; right: number };\n  private view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number };\n  private events: VFCEvents;\n  private crosshair: { x: number; y: number; visible: boolean };\n  private momentum = { raf: 0, vx: 0, lastTs: 0, active: false };\n  private readonly PAN_INVERT = { x: true, y: false };\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    margin: { top: number; bottom: number; left: number; right: number },\n    view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number },\n    events: VFCEvents,\n    crosshair: { x: number; y: number; visible: boolean }\n  ) {\n    this.canvas = canvas;\n    this.margin = margin;\n    this.view = view;\n    this.events = events;\n    this.crosshair = crosshair;\n    this.setupMouseTracking();\n  }\n\n  handleWheel(e: WheelEvent): void {\n    e.preventDefault();\n    const rect = this.canvas.getBoundingClientRect();\n    const mx = e.clientX - rect.left;\n    const my = e.clientY - rect.top;\n    const chartRight = this.canvas.clientWidth - this.margin.right;\n    const yBottom = this.margin.top + 600 - this.margin.top - this.margin.bottom; // chartHeight\n\n    const overPriceBar = mx > chartRight;\n    const overTimeline = my > yBottom;\n    const overChartBody = !overPriceBar && !overTimeline;\n\n    if (overPriceBar) {\n      this.view.zoomY *= (e.deltaY < 0 ? 1.1 : 0.9);\n      this.view.zoomY = Math.max(0.1, Math.min(8, this.view.zoomY));\n      this.events.onZoom?.(this.view.zoomX, this.view.zoomY);\n    } else if (overChartBody) {\n      const prev = this.view.zoomX;\n      const factor = (e.deltaY < 0 ? 1.1 : 0.9);\n      const next = Math.max(0.1, Math.min(8, prev * factor));\n      this.view.zoomX = next;\n      this.view.zoomY *= (next / prev); // Also zoom the price axis\n      this.view.zoomY = Math.max(0.1, Math.min(8, this.view.zoomY));\n      // Adjust offsetX to keep the same startIndex (prevent scrolling)\n      this.view.offsetX *= (next / prev);\n      this.events.onZoom?.(this.view.zoomX, this.view.zoomY);\n    } else if (overTimeline) {\n      // Timeline zoom: same mechanism as chart but only affects X axis\n      const prev = this.view.zoomX;\n      const factor = (e.deltaY < 0 ? 1.1 : 0.9);\n      const next = Math.max(0.1, Math.min(8, prev * factor));\n      this.view.zoomX = next;\n      this.view.offsetX *= (next / prev);\n      this.events.onZoom?.(this.view.zoomX, this.view.zoomY);\n    }\n  }\n\n  handlePointerDown(e: PointerEvent): void {\n    this.canvas.setPointerCapture(e.pointerId);\n    let lastX = e.clientX;\n    let lastY = e.clientY;\n    let velX = 0;\n    let lastT = performance.now();\n\n    const onMove = (ev: PointerEvent) => {\n      const now = performance.now();\n      const dt = Math.max(1, now - lastT);\n      const dx = ev.clientX - lastX;\n      const dy = ev.clientY - lastY;\n      lastX = ev.clientX;\n      lastY = ev.clientY;\n      lastT = now;\n\n      // 1:1 mouse movement like the original volume_footprint_chart.html\n      this.view.offsetX += (this.PAN_INVERT.x ? -dx : dx);\n      this.view.offsetRows += (this.PAN_INVERT.y ? -dy : dy) / (22 * this.view.zoomY); // rowHeightPx()\n      velX = (this.PAN_INVERT.x ? -dx : dx) / dt;\n      this.events.onPan?.(this.view.offsetX, this.view.offsetRows);\n    };\n\n    const onUp = () => {\n      this.canvas.releasePointerCapture(e.pointerId);\n      this.canvas.removeEventListener('pointermove', onMove);\n      this.canvas.removeEventListener('pointerup', onUp);\n      this.canvas.removeEventListener('pointercancel', onUp);\n      // Removed momentum to stop chart from continuing to move after mouse release\n    };\n\n    this.canvas.addEventListener('pointermove', onMove);\n    this.canvas.addEventListener('pointerup', onUp);\n    this.canvas.addEventListener('pointercancel', onUp);\n  }\n\n  private cancelMomentum(): void {\n    if (this.momentum.raf) {\n      cancelAnimationFrame(this.momentum.raf);\n      this.momentum.raf = 0;\n    }\n    this.momentum.active = false;\n  }\n\n  private startMomentum(vx: number): void {\n    this.momentum.vx = vx;\n    this.momentum.lastTs = 0;\n    this.momentum.active = true;\n    if (!this.momentum.raf) {\n      this.momentum.raf = requestAnimationFrame(this.stepMomentum.bind(this));\n    }\n  }\n\n  private stepMomentum(ts: number): void {\n    if (!this.momentum.active) {\n      this.momentum.raf = 0;\n      return;\n    }\n    if (!this.momentum.lastTs) this.momentum.lastTs = ts;\n    const dt = ts - this.momentum.lastTs;\n    this.momentum.lastTs = ts;\n    this.view.offsetX += this.momentum.vx * dt;\n    this.momentum.vx *= 0.98;\n    if (Math.abs(this.momentum.vx) < 0.001) {\n      this.cancelMomentum();\n    }\n  }\n\n  private setupMouseTracking(): void {\n    this.canvas.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    this.canvas.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n  }\n\n  private handleMouseMove(e: MouseEvent): void {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Check if mouse is over the chart area\n    const chartRight = this.canvas.clientWidth - this.margin.right;\n    const canvasHeight = this.canvas.height / window.devicePixelRatio;\n    const yBottom = canvasHeight - this.margin.bottom;\n\n    const overChartBody = x >= this.margin.left && x <= chartRight &&\n                         y >= this.margin.top && y <= yBottom;\n\n    if (overChartBody) {\n      this.crosshair.x = x;\n      this.crosshair.y = y;\n      this.crosshair.visible = true;\n    } else {\n      this.crosshair.visible = false;\n    }\n\n    // Trigger redraw\n    this.events.onMouseMove?.(x, y, this.crosshair.visible);\n  }\n\n  private handleMouseLeave(): void {\n    this.crosshair.visible = false;\n    this.events.onMouseMove?.(-1, -1, false);\n  }\n}","import { CandleData, VFCTheme } from './types';\nimport { Scales } from './scales';\n\nexport class Drawing {\n  private ctx: CanvasRenderingContext2D;\n  private data: CandleData[];\n  private margin: { top: number; bottom: number; left: number; right: number };\n  private view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number };\n  private showGrid: boolean;\n  private showBounds: boolean;\n  private scales: Scales;\n  private theme: VFCTheme;\n  private crosshair: { x: number; y: number; visible: boolean };\n  private lastPrice: number | null;\n\n  constructor(\n    ctx: CanvasRenderingContext2D,\n    data: CandleData[],\n    margin: { top: number; bottom: number; left: number; right: number },\n    view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number },\n    showGrid: boolean,\n    showBounds: boolean,\n    scales: Scales,\n    theme: VFCTheme,\n    crosshair: { x: number; y: number; visible: boolean },\n    lastPrice: number | null\n  ) {\n    this.ctx = ctx;\n    this.data = data;\n    this.margin = margin;\n    this.view = view;\n    this.showGrid = showGrid;\n    this.showBounds = showBounds;\n    this.scales = scales;\n    this.theme = theme;\n    this.crosshair = crosshair;\n    this.lastPrice = lastPrice;\n  }\n\n  drawAll(): void {\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const height = this.ctx.canvas.height / window.devicePixelRatio;\n    this.ctx.clearRect(0, 0, width, height);\n    if (this.showGrid) this.drawGrid();\n    this.drawChart();\n    this.drawScales();\n    this.drawCurrentPriceLabel();\n    if (this.crosshair.visible) this.drawCrosshair();\n    if (this.showBounds) this.drawBounds();\n  }\n\n  private drawGrid(): void {\n    if (!this.showGrid) return;\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const chartRight = width - this.margin.right;\n    this.ctx.strokeStyle = this.theme.gridColor || '#333';\n    this.ctx.lineWidth = 1;\n    const gridSpacing = 28;\n    const numLines = Math.floor(this.scales.chartHeight() / gridSpacing);\n    this.ctx.beginPath();\n    for (let i = 0; i <= numLines; i++) {\n      const y = this.margin.top + i * gridSpacing;\n      this.ctx.moveTo(this.margin.left, y);\n      this.ctx.lineTo(chartRight, y);\n    }\n    this.ctx.stroke();\n\n    const vr = this.scales.getVisibleRange();\n    this.ctx.beginPath();\n    for (let i = vr.startIndex; i < vr.endIndex; i++) {\n      const x = this.scales.indexToX(i, vr.startIndex) + this.scales.scaledSpacing() / 2;\n      this.ctx.moveTo(x, this.margin.top);\n      this.ctx.lineTo(x, this.margin.top + this.scales.chartHeight());\n    }\n    this.ctx.strokeStyle = this.theme.gridLightColor || '#252525';\n    this.ctx.stroke();\n  }\n\n  private drawChart(): void {\n    this.ctx.save();\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    this.ctx.beginPath();\n    this.ctx.rect(\n      this.margin.left,\n      this.margin.top,\n      width - this.margin.left - this.margin.right,\n      this.scales.chartHeight()\n    );\n    this.ctx.clip();\n\n    const vr = this.scales.getVisibleRange();\n    for (let i = vr.startIndex; i < vr.endIndex; i++) {\n      this.drawFootprint(this.data[i], i, vr.startIndex);\n    }\n    this.ctx.restore();\n  }\n\n  private drawScales(): void {\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const height = this.ctx.canvas.height / window.devicePixelRatio;\n\n    // Right price bar\n    const right = width - this.margin.right;\n    this.ctx.fillStyle = this.theme.scaleBackground || '#111';\n    this.ctx.fillRect(right, 0, this.margin.right, height);\n    this.ctx.strokeStyle = this.theme.scaleBorder || '#444';\n    this.ctx.strokeRect(right + 0.5, this.margin.top, 0.5, this.scales.chartHeight());\n\n    // Price labels\n    this.ctx.fillStyle = this.theme.textColor || '#aaa';\n    this.ctx.font = '12px system-ui';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    const labels = this.scales.computePriceBarLabels();\n    for (const { price, y } of labels) {\n      this.ctx.fillText(String(price), right + this.margin.right / 2, y);\n    }\n\n    // Bottom timeline\n    const bottomY = this.margin.top + this.scales.chartHeight();\n    const chartW = width - this.margin.left - this.margin.right;\n    this.ctx.fillStyle = this.theme.scaleBackground || '#111';\n    this.ctx.fillRect(this.margin.left, bottomY, chartW, this.margin.bottom);\n    this.ctx.strokeStyle = this.theme.scaleBorder || '#444';\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.margin.left, bottomY + 0.5);\n    this.ctx.lineTo(this.margin.left + chartW, bottomY + 0.5);\n    this.ctx.stroke();\n\n    // Timeline labels - extended to show future times\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.rect(this.margin.left, bottomY, chartW, this.margin.bottom);\n    this.ctx.clip();\n    this.ctx.fillStyle = this.theme.textColor || '#aaa';\n    this.ctx.font = '12px system-ui';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    const step = Math.max(1, Math.floor(120 / this.scales.scaledSpacing()));\n    const vr = this.scales.getVisibleRange();\n    // Extend timeline to show future times beyond current data\n    const extendedStart = Math.max(0, vr.startIndex - 10);\n    const extendedEnd = vr.endIndex + 30; // Show 30 future time slots\n    for (let i = extendedStart; i < extendedEnd; i += step) {\n      const x = this.scales.indexToX(i, vr.startIndex);\n      let date: Date;\n      if (i < this.data.length && this.data[i]) {\n        date = new Date(this.data[i].time);\n      } else {\n        // Extrapolate future times based on data intervals\n        if (this.data.length > 1) {\n          const lastTime = new Date(this.data[this.data.length - 1].time).getTime();\n          const prevTime = new Date(this.data[this.data.length - 2].time).getTime();\n          const interval = lastTime - prevTime; // Time between last two data points\n          date = new Date(lastTime + (i - this.data.length + 1) * interval);\n        } else {\n          // Fallback: assume 1 minute intervals\n          const lastTime = this.data.length > 0 ?\n            new Date(this.data[this.data.length - 1].time).getTime() :\n            Date.now();\n          date = new Date(lastTime + (i - Math.max(0, this.data.length - 1)) * 60000);\n        }\n      }\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const t = `${hours}:${minutes}`;\n      this.ctx.fillText(t, x, bottomY + this.margin.bottom / 2);\n    }\n    this.ctx.restore();\n  }\n\n  private drawBounds(): void {\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const height = this.ctx.canvas.height / window.devicePixelRatio;\n    const chartW = width - this.margin.left - this.margin.right;\n    const chartH = this.scales.chartHeight();\n    const rightX = width - this.margin.right;\n    const bottomY = this.margin.top + chartH;\n\n    this.ctx.save();\n    this.ctx.fillStyle = 'rgba(255, 255, 0, 0.05)';\n    this.ctx.fillRect(0, 0, width, this.margin.top);\n    this.ctx.fillRect(0, this.margin.top, this.margin.left, chartH);\n    this.ctx.fillRect(this.margin.left, bottomY, chartW, this.margin.bottom);\n\n    this.ctx.setLineDash([6, 3]);\n    this.ctx.strokeStyle = '#f59e0b';\n    this.ctx.lineWidth = 1.5;\n    this.ctx.strokeRect(this.margin.left + 0.5, this.margin.top + 0.5, chartW, chartH);\n\n    this.ctx.strokeStyle = '#22d3ee';\n    this.ctx.strokeRect(rightX + 0.5, 0.5, this.margin.right - 1, height - 1);\n    this.ctx.strokeRect(this.margin.left + 0.5, bottomY + 0.5, chartW, this.margin.bottom - 1);\n    this.ctx.setLineDash([]);\n    this.ctx.restore();\n  }\n\n  private drawFootprint(candle: CandleData, i: number, startIndex: number): void {\n    const cx = this.scales.indexToX(i, startIndex);\n    const rows = candle.footprint.slice().sort((a, b) => b.price - a.price);\n    const enableProfile = rows.length > 3;\n\n    // Calculate VAH/VAL\n    const levelVols = rows.map(r => r.buy + r.sell);\n    const totalVol = levelVols.reduce((a, b) => a + b, 0);\n    let pocIdx = 0;\n    for (let i = 1; i < levelVols.length; i++) {\n      if (levelVols[i] > levelVols[pocIdx]) pocIdx = i;\n    }\n\n    let included = new Set([pocIdx]);\n    if (enableProfile) {\n      let acc = levelVols[pocIdx];\n      let up = pocIdx - 1, down = pocIdx + 1;\n      while (acc < 0.7 * totalVol && (up >= 0 || down < rows.length)) {\n        const upVol = up >= 0 ? levelVols[up] : -1;\n        const downVol = down < rows.length ? levelVols[down] : -1;\n        if (upVol >= downVol) {\n          if (up >= 0) { included.add(up); acc += levelVols[up]; up--; }\n          else { included.add(down); acc += levelVols[down]; down++; }\n        } else {\n          if (down < rows.length) { included.add(down); acc += levelVols[down]; down++; }\n          else { included.add(up); acc += levelVols[up]; up--; }\n        }\n      }\n    }\n\n    const vahIdx = Math.min(...included);\n    const valIdx = Math.max(...included);\n    const VAH = rows[vahIdx]?.price;\n    const VAL = rows[valIdx]?.price;\n\n    const half = this.scales.scaledCandle() / 2;\n    const leftX = cx - half - this.scales.scaledBox();\n    const rightX = cx + half;\n\n    const sideMax = Math.max(...rows.map(f => Math.max(f.buy, f.sell)), 1);\n    const buyBase = this.theme.volumeBuyBase ?? 0.15;\n    const sellBase = this.theme.volumeSellBase ?? 0.15;\n    const buyRGBA = (v: number) => `rgba(0,255,0,${buyBase + 0.55 * (v / sideMax)})`;\n    const sellRGBA = (v: number) => `rgba(255,0,0,${sellBase + 0.55 * (v / sideMax)})`;\n\n    let minRow = Infinity, maxRow = -Infinity;\n    let totBuy = 0, totSell = 0;\n\n    // Draw boxes\n    for (let r = 0; r < rows.length; r++) {\n      const f = rows[r];\n      const row = this.scales.priceToRowIndex(f.price);\n      const yTop = this.scales.rowToY(row - 0.5);\n      const yBot = this.scales.rowToY(row + 0.5);\n      const h = Math.max(1, yBot - yTop);\n      minRow = Math.min(minRow, row - 0.5);\n      maxRow = Math.max(maxRow, row + 0.5);\n      totBuy += f.buy;\n      totSell += f.sell;\n\n      const isPOC = enableProfile && (r === pocIdx);\n      this.ctx.fillStyle = isPOC ? (this.theme.pocColor || '#808080') : sellRGBA(f.sell);\n      this.ctx.fillRect(leftX, yTop, this.scales.scaledBox(), h);\n      this.ctx.fillStyle = isPOC ? (this.theme.pocColor || '#808080') : buyRGBA(f.buy);\n      this.ctx.fillRect(rightX, yTop, this.scales.scaledBox(), h);\n    }\n\n    // Imbalance markers\n    for (let r = 0; r < rows.length; r++) {\n      const f = rows[r];\n      const prev = rows[r - 1];\n      const next = rows[r + 1];\n      const row = this.scales.priceToRowIndex(f.price);\n      const yTop = this.scales.rowToY(row - 0.5);\n      const yBot = this.scales.rowToY(row + 0.5);\n      const h = Math.max(1, yBot - yTop);\n      if (prev && f.sell >= 3 * Math.max(1, prev.buy)) {\n        this.ctx.fillStyle = this.theme.imbalanceSell || '#dc2626';\n        this.ctx.fillRect(leftX - this.scales.scaledImb() - 1, yTop, this.scales.scaledImb(), h);\n      }\n      if (next && f.buy >= 3 * Math.max(1, next.sell)) {\n        this.ctx.fillStyle = this.theme.imbalanceBuy || '#16a34a';\n        this.ctx.fillRect(rightX + this.scales.scaledBox() + 1, yTop, this.scales.scaledImb(), h);\n      }\n    }\n\n    // Volume numbers\n    if (this.scales.shouldShowCellText()) {\n      const fontSize = Math.max(8, Math.min(16, 11 * this.view.zoomX));\n      this.ctx.font = `${fontSize}px system-ui`;\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      for (let r = 0; r < rows.length; r++) {\n        const f = rows[r];\n        const row = this.scales.priceToRowIndex(f.price);\n        const y = this.scales.rowToY(row);\n        const isPOC = enableProfile && (r === pocIdx);\n        this.ctx.fillStyle = isPOC ? (this.theme.pocTextColor || this.theme.textColorBright || '#ffffff') : (this.theme.textColorBright || '#ddd');\n        this.ctx.fillText(this.scales.formatK(f.sell), leftX + this.scales.scaledBox() / 2, y);\n        this.ctx.fillText(this.scales.formatK(f.buy), rightX + this.scales.scaledBox() / 2, y);\n      }\n    }\n\n    // VAH/VAL lines and labels\n    if (enableProfile && this.scales.shouldShowCellText()) {\n      const rVah = this.scales.priceToRowIndex(VAH), rVal = this.scales.priceToRowIndex(VAL);\n      const yVah = this.scales.rowToY(rVah - 0.5);\n      const yVal = this.scales.rowToY(rVal + 0.5);\n      const rightEdge = rightX + this.scales.scaledBox();\n\n      this.ctx.save();\n      this.ctx.setLineDash([4, 2]);\n      this.ctx.strokeStyle = this.theme.vahValColor || '#9ca3af';\n      this.ctx.beginPath();\n      this.ctx.moveTo(leftX, yVah);\n      this.ctx.lineTo(rightEdge, yVah);\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.moveTo(leftX, yVal);\n      this.ctx.lineTo(rightEdge, yVal);\n      this.ctx.stroke();\n      this.ctx.setLineDash([]);\n\n      const vahFontSize = Math.max(6, Math.min(12, 8 * this.view.zoomX));\n      this.ctx.fillStyle = this.theme.vahValLabelColor || '#cfd3d6';\n      this.ctx.font = `${vahFontSize}px monospace`;\n      this.ctx.textAlign = 'left';\n      this.ctx.textBaseline = 'middle';\n      const labelX = cx - half - this.scales.scaledBox() + 3;\n      this.ctx.fillText('VAH', labelX, yVah);\n      this.ctx.fillText('VAL', labelX, yVal);\n      this.ctx.restore();\n    }\n\n    // Delta/Total labels\n    if (this.scales.shouldShowCellText()) {\n      const yLowFootprint = this.scales.rowToY(maxRow) + 2;\n      const delta = totBuy - totSell;\n      const deltaFontSize = Math.max(8, Math.min(18, 12 * this.view.zoomX));\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${deltaFontSize}px system-ui`;\n      this.ctx.fillStyle = delta >= 0 ? (this.theme.deltaPositive || '#16a34a') : (this.theme.deltaNegative || '#dc2626');\n      this.ctx.fillText(`Delta ${this.scales.formatK(delta)}`, cx, yLowFootprint + 14);\n      this.ctx.fillStyle = this.theme.totalColor || '#fff';\n      this.ctx.fillText(`Total ${this.scales.formatK(totalVol)}`, cx, yLowFootprint + 32);\n    }\n\n    // Wick & body\n    const yHigh = this.scales.priceToY(candle.high);\n    const yLow = this.scales.priceToY(candle.low);\n    const yOpen = this.scales.priceToY(candle.open);\n    const yClose = this.scales.priceToY(candle.close);\n    const bull = candle.close >= candle.open;\n    const color = bull ? (this.theme.candleBull || '#26a69a') : (this.theme.candleBear || '#ef5350');\n    this.ctx.strokeStyle = color;\n    this.ctx.beginPath();\n    this.ctx.moveTo(cx, yHigh);\n    this.ctx.lineTo(cx, yLow);\n    this.ctx.stroke();\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(cx - half, Math.min(yOpen, yClose), this.scales.scaledCandle(), Math.abs(yClose - yOpen));\n  }\n\n\n  private drawCrosshair(): void {\n    if (!this.crosshair.visible) return;\n\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const height = this.ctx.canvas.height / window.devicePixelRatio;\n    const chartRight = width - this.margin.right;\n    const yBottom = this.margin.top + this.scales.chartHeight();\n\n    this.ctx.save();\n\n    // Draw vertical line\n    this.ctx.strokeStyle = this.theme.textColor || '#aaa';\n    this.ctx.lineWidth = 1;\n    this.ctx.setLineDash([2, 2]);\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.crosshair.x, this.margin.top);\n    this.ctx.lineTo(this.crosshair.x, yBottom);\n    this.ctx.stroke();\n\n    // Draw horizontal line\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.margin.left, this.crosshair.y);\n    this.ctx.lineTo(chartRight, this.crosshair.y);\n    this.ctx.stroke();\n\n    // Draw price label on right side\n    const price = this.scales.rowIndexToPrice(\n      (this.crosshair.y - this.margin.top) / this.scales.rowHeightPx() + this.view.offsetRows\n    );\n    this.ctx.setLineDash([]);\n    this.ctx.fillStyle = this.theme.scaleBackground || '#111';\n    this.ctx.fillRect(chartRight, this.crosshair.y - 8, this.margin.right, 16);\n    this.ctx.strokeStyle = this.theme.scaleBorder || '#444';\n    this.ctx.strokeRect(chartRight, this.crosshair.y - 8, this.margin.right, 16);\n    this.ctx.fillStyle = this.theme.textColor || '#aaa';\n    this.ctx.font = '11px system-ui';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(price.toFixed(2), chartRight + this.margin.right / 2, this.crosshair.y);\n\n    // Draw time label on bottom\n    const index = this.scales.screenXToDataIndex(this.crosshair.x);\n    let timeStr = '--:--';\n    if (index >= 0 && index < this.data.length && this.data[index]) {\n      const date = new Date(this.data[index].time);\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      timeStr = `${hours}:${minutes}`;\n    }\n\n    this.ctx.fillStyle = this.theme.scaleBackground || '#111';\n    this.ctx.fillRect(this.crosshair.x - 20, yBottom, 40, this.margin.bottom);\n    this.ctx.strokeStyle = this.theme.scaleBorder || '#444';\n    this.ctx.strokeRect(this.crosshair.x - 20, yBottom, 40, this.margin.bottom);\n    this.ctx.fillStyle = this.theme.textColor || '#aaa';\n    this.ctx.font = '11px system-ui';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(timeStr, this.crosshair.x, yBottom + this.margin.bottom / 2);\n\n    this.ctx.restore();\n  }\n\n  private drawCurrentPriceLabel(): void {\n    if (!this.lastPrice) return;\n\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const height = this.ctx.canvas.height / window.devicePixelRatio;\n    const right = width - this.margin.right;\n    const y = this.scales.priceToY(this.lastPrice);\n\n    this.ctx.save();\n\n    // Draw dashed line across the chart at the last price level\n    this.ctx.setLineDash([5, 5]);\n    this.ctx.strokeStyle = this.theme.textColor || '#aaa';\n    this.ctx.lineWidth = 1;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.margin.left, y);\n    this.ctx.lineTo(right, y);\n    this.ctx.stroke();\n    this.ctx.setLineDash([]);\n\n    // Draw price label on the price bar (right side scale area)\n    const labelText = this.lastPrice.toFixed(2);\n    this.ctx.font = 'bold 12px system-ui';\n    const textWidth = this.ctx.measureText(labelText).width;\n    const boxWidth = textWidth + 8;\n    const boxHeight = 18;\n\n    // Position the label in the price bar area\n    const boxX = right + 2;\n    const boxY = y - boxHeight / 2;\n\n    // Draw background\n    this.ctx.fillStyle = '#26a69a';  // Green background like in the image\n    this.ctx.fillRect(boxX, boxY, boxWidth, boxHeight);\n\n    // Draw border\n    this.ctx.strokeStyle = '#ffffff';\n    this.ctx.lineWidth = 1;\n    this.ctx.strokeRect(boxX, boxY, boxWidth, boxHeight);\n\n    // Draw price text\n    this.ctx.fillStyle = '#ffffff';  // White text\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(labelText, boxX + boxWidth / 2, boxY + boxHeight / 2);\n\n    this.ctx.restore();\n  }\n}","import { CandleData, VFCOptions, VFCEvents } from './types';\nimport { Scales } from './scales';\nimport { Interactions } from './interactions';\nimport { Drawing } from './drawing';\n\nexport class Chart {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private data: CandleData[] = [];\n  private options: Required<VFCOptions>;\n  private events: VFCEvents = {};\n\n  // Chart state\n  private margin = { top: 0, bottom: 40, left: 0, right: 40 };\n  private view = { zoomY: 1, zoomX: 1, offsetRows: 0, offsetX: 0, offsetY: 0 };\n  private showGrid = true;\n  private showBounds = false;\n  private crosshair = { x: -1, y: -1, visible: false };\n  private lastPrice: number | null = null;\n\n  // Constants\n  private readonly TICK = 10;\n  private readonly BASE_CANDLE = 15;\n  private readonly BASE_BOX = 55;\n  private readonly BASE_IMBALANCE = 2;\n  private readonly BASE_SPACING = this.BASE_CANDLE + 2 * this.BASE_BOX + 2 * this.BASE_IMBALANCE;\n  private readonly FIXED_GAP = 4;\n  private readonly baseRowPx = 22;\n  private readonly TEXT_VIS = { minZoomX: 0.5, minRowPx: 10, minBoxPx: 20 };\n\n  // Modules\n  private scales: Scales;\n  private interactions: Interactions;\n  private drawing: Drawing;\n\n  constructor(container: HTMLElement, options: VFCOptions = {}, events: VFCEvents = {}) {\n    // Use existing canvas if available, otherwise create one\n    this.canvas = container.querySelector('canvas') as HTMLCanvasElement;\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      container.appendChild(this.canvas);\n    }\n\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) throw new Error('Canvas 2D context not available');\n    this.ctx = ctx;\n\n    this.options = {\n      width: options.width || container.clientWidth || 800,\n      height: options.height || container.clientHeight || 600,\n      showGrid: options.showGrid ?? true,\n      showBounds: options.showBounds ?? false,\n      tickSize: options.tickSize || 10,\n      initialZoomX: options.initialZoomX || 1,\n      initialZoomY: options.initialZoomY || 1,\n      margin: options.margin || this.margin,\n      theme: options.theme || {}\n    };\n\n    this.events = events;\n    this.margin = this.options.margin;\n    this.showGrid = this.options.showGrid;\n    this.showBounds = this.options.showBounds;\n    this.view.zoomX = this.options.initialZoomX;\n    this.view.zoomY = this.options.initialZoomY;\n\n    // Initialize modules\n    this.scales = new Scales(\n      this.data,\n      this.margin,\n      this.view,\n      this.options.width,\n      this.options.height,\n      this.TICK,\n      this.baseRowPx,\n      this.TEXT_VIS\n    );\n\n    this.interactions = new Interactions(\n      this.canvas,\n      this.margin,\n      this.view,\n      {\n        ...this.events,\n        onPan: () => this.drawing.drawAll(),\n        onZoom: () => this.drawing.drawAll(),\n        onMouseMove: () => this.drawing.drawAll()\n      },\n      this.crosshair\n    );\n\n    this.drawing = new Drawing(\n      this.ctx,\n      this.data,\n      this.margin,\n      this.view,\n      this.showGrid,\n      this.showBounds,\n      this.scales,\n      this.options.theme,\n      this.crosshair,\n      this.lastPrice\n    );\n\n    this.setupCanvas();\n    this.bindEvents();\n    this.layout();\n  }\n\n  private setupCanvas() {\n    const DPR = Math.max(1, Math.round(window.devicePixelRatio || 1));\n    this.canvas.style.width = this.options.width + 'px';\n    this.canvas.style.height = this.options.height + 'px';\n    this.canvas.width = Math.max(1, Math.floor(this.options.width * DPR));\n    this.canvas.height = Math.max(1, Math.floor(this.options.height * DPR));\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.scale(DPR, DPR);\n  }\n\n  private bindEvents() {\n    this.canvas.addEventListener('wheel', this.handleWheel.bind(this), { passive: false });\n    this.canvas.addEventListener('pointerdown', this.handlePointerDown.bind(this));\n    window.addEventListener('resize', this.layout.bind(this));\n  }\n\n  private handleWheel(e: WheelEvent) {\n    this.interactions.handleWheel(e);\n    this.drawing.drawAll();\n  }\n\n  private handlePointerDown(e: PointerEvent) {\n    this.interactions.handlePointerDown(e);\n  }\n\n  private layout() {\n    const container = this.canvas.parentElement;\n    if (container) {\n      this.options.width = container.clientWidth || this.options.width;\n      this.options.height = container.clientHeight || this.options.height;\n    }\n    this.setupCanvas();\n    this.drawing.drawAll();\n  }\n\n  // Public API\n  public setData(data: CandleData[]) {\n    this.data = data;\n    \n    // Calculate lastPrice first, before creating Drawing instance\n    if (data.length > 0) {\n        const lastPrice = data[data.length - 1].close;\n        this.lastPrice = lastPrice;\n    }\n    \n    // Update scales with new data\n    this.scales = new Scales(\n      this.data,\n      this.margin,\n      this.view,\n      this.options.width,\n      this.options.height,\n      this.TICK,\n      this.baseRowPx,\n      this.TEXT_VIS\n    );\n    \n    this.drawing = new Drawing(\n      this.ctx,\n      this.data,\n      this.margin,\n      this.view,\n      this.showGrid,\n      this.showBounds,\n      this.scales,\n      this.options.theme,\n      this.crosshair,\n      this.lastPrice  // Now has the correct value\n    );\n\n    // Set initial view to show the end of the chart (latest data) and center the last price vertically\n    if (data.length > 0) {\n        const s = this.scales.scaledSpacing();\n        const contentW = this.options.width - this.margin.left - this.margin.right;\n        const visibleCount = Math.ceil(contentW / s);\n        const startIndex = Math.max(0, data.length - visibleCount);\n        this.view.offsetX = startIndex * s;\n        // Center the last candle's close price vertically\n        const lastPrice = this.lastPrice!; // We know it's not null at this point\n        const totalRows = Math.floor(this.scales.chartHeight() / this.scales.rowHeightPx());\n        const centerRow = totalRows / 2;\n        this.view.offsetRows = centerRow - (this.scales.priceToRowIndex(lastPrice) - centerRow);\n    }\n    this.drawing.drawAll();\n  }\n\n  public updateOptions(options: Partial<VFCOptions>) {\n    Object.assign(this.options, options);\n    this.layout();\n  }\n\n  public resize(width: number, height: number) {\n    this.options.width = width;\n    this.options.height = height;\n    this.layout();\n  }\n\n  public destroy() {\n    if (this.canvas.parentElement) {\n      this.canvas.parentElement.removeChild(this.canvas);\n    }\n  }\n\n  // Getters for API access\n  public getOptions() { return this.options; }\n  public getShowGrid() { return this.showGrid; }\n}","import { ISeriesApi } from './iseries-api';\nimport { IPriceScaleApi } from './iprice-scale-api';\nimport { VolumeFootprintData, VolumeFootprintSeriesOptions } from './ichart-api';\nimport { IChartImplementation } from './ichart-api';\n\nexport class VolumeFootprintSeriesApi implements ISeriesApi<VolumeFootprintData> {\n  private chart: IChartImplementation;\n  private seriesOptions: VolumeFootprintSeriesOptions;\n\n  constructor(chart: IChartImplementation, options?: VolumeFootprintSeriesOptions) {\n    this.chart = chart;\n    this.seriesOptions = options || {};\n  }\n\n  setData(data: VolumeFootprintData[]): void {\n    // Convert data format and set on chart\n    const convertedData = data.map(d => ({\n      time: typeof d.time === 'number' ? new Date(d.time).toISOString() : d.time,\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close,\n      footprint: d.footprint || []\n    }));\n    this.chart.setData(convertedData);\n  }\n\n  update(data: VolumeFootprintData): void {\n    // Update latest data point\n    this.setData([data]);\n  }\n\n  data(): VolumeFootprintData[] {\n    // Return current data (would need to store this)\n    return [];\n  }\n\n  applyOptions(options: VolumeFootprintSeriesOptions): void {\n    this.seriesOptions = { ...this.seriesOptions, ...options };\n  }\n\n  options(): VolumeFootprintSeriesOptions {\n    return this.seriesOptions;\n  }\n\n  priceScale(): IPriceScaleApi {\n    return {\n      applyOptions: () => {},\n      options: () => ({}),\n      width: () => 40,\n      height: () => 0,\n      isEmpty: () => false,\n      priceToCoordinate: () => null,\n      coordinateToPrice: () => null\n    };\n  }\n\n  visible(): boolean {\n    return true;\n  }\n\n  setVisible(visible: boolean): void {\n    // Implement visibility toggle\n  }\n}","import { ITimeScaleApi, TimeScaleOptions, TimeScaleRange } from './itime-scale-api';\nimport { IChartImplementation } from './ichart-api';\n\nexport class TimeScaleApi implements ITimeScaleApi {\n  private chart: IChartImplementation;\n\n  constructor(chart: IChartImplementation) {\n    this.chart = chart;\n  }\n\n  applyOptions(options: TimeScaleOptions): void {\n    // Apply time scale options\n  }\n\n  options(): TimeScaleOptions {\n    return {\n      visible: true,\n      timeVisible: true,\n      barSpacing: 30\n    };\n  }\n\n  scrollToPosition(position: number, animated?: boolean): void {\n    // Scroll to position\n  }\n\n  scrollToRealTime(): void {\n    // Scroll to real time\n  }\n\n  getVisibleRange(): TimeScaleRange | null {\n    return null;\n  }\n\n  setVisibleRange(range: TimeScaleRange): void {\n    // Set visible range\n  }\n\n  resetTimeScale(): void {\n    // Reset time scale\n  }\n\n  fitContent(): void {\n    // Fit content\n  }\n\n  timeToCoordinate(time: string | number): number | null {\n    return null;\n  }\n\n  coordinateToTime(coordinate: number): string | number | null {\n    return null;\n  }\n}","import { IPriceScaleApi, PriceScaleOptions } from './iprice-scale-api';\nimport { IChartImplementation } from './ichart-api';\n\nexport class PriceScaleApi implements IPriceScaleApi {\n  private chart: IChartImplementation;\n\n  constructor(chart: IChartImplementation) {\n    this.chart = chart;\n  }\n\n  applyOptions(options: PriceScaleOptions): void {\n    // Apply price scale options\n  }\n\n  options(): PriceScaleOptions {\n    return {\n      visible: true,\n      autoScale: true\n    };\n  }\n\n  width(): number {\n    return 40;\n  }\n\n  height(): number {\n    return 0; // Would need to calculate actual height\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  priceToCoordinate(price: number): number | null {\n    return null; // Would need to implement coordinate conversion\n  }\n\n  coordinateToPrice(coordinate: number): number | null {\n    return null; // Would need to implement coordinate conversion\n  }\n}","import { IChartApi, IChartImplementation, ChartOptions, VolumeFootprintSeriesOptions, VolumeFootprintData } from './ichart-api';\nimport { ISeriesApi } from './iseries-api';\nimport { ITimeScaleApi } from './itime-scale-api';\nimport { IPriceScaleApi } from './iprice-scale-api';\nimport { Chart as VFC } from '../chart'; // Import the Chart implementation directly\nimport { VolumeFootprintSeriesApi } from './volume-footprint-series-api';\nimport { TimeScaleApi } from './time-scale-api';\nimport { PriceScaleApi } from './price-scale-api';\n\nexport class ChartApi implements IChartApi {\n  private chart: IChartImplementation;\n  private series: ISeriesApi[] = [];\n  private timeScaleApi: TimeScaleApi;\n  private priceScaleApi: PriceScaleApi;\n\n  constructor(container: HTMLElement, options: ChartOptions) {\n    // Convert options to VFC format\n    const vfcOptions = {\n      width: options.width,\n      height: options.height,\n      showGrid: options.grid?.horzLines?.visible ?? true,\n      showBounds: false,\n      tickSize: 10,\n      initialZoomX: 2, // Higher zoom to show footprints\n      initialZoomY: 1,\n      margin: { top: 0, bottom: 40, left: 0, right: 60 }\n    };\n\n    this.chart = new VFC(container, vfcOptions);\n    this.timeScaleApi = new TimeScaleApi(this.chart);\n    this.priceScaleApi = new PriceScaleApi(this.chart);\n  }\n\n  addVolumeFootprintSeries(options?: VolumeFootprintSeriesOptions): ISeriesApi<VolumeFootprintData> {\n    const seriesApi = new VolumeFootprintSeriesApi(this.chart, options);\n    this.series.push(seriesApi);\n    return seriesApi;\n  }\n\n  removeSeries(seriesApi: ISeriesApi<any>): void {\n    const index = this.series.indexOf(seriesApi);\n    if (index > -1) {\n      this.series.splice(index, 1);\n    }\n  }\n\n  timeScale(): ITimeScaleApi {\n    return this.timeScaleApi;\n  }\n\n  priceScale(): IPriceScaleApi {\n    return this.priceScaleApi;\n  }\n\n  applyOptions(options: ChartOptions): void {\n    // Convert and apply options\n    const vfcOptions = {\n      width: options.width,\n      height: options.height,\n      showGrid: options.grid?.horzLines?.visible ?? true\n    };\n    this.chart.updateOptions(vfcOptions);\n  }\n\n  options(): ChartOptions {\n    const opts = this.chart.getOptions();\n    return {\n      width: opts.width,\n      height: opts.height,\n      grid: {\n        horzLines: { visible: this.chart.getShowGrid() }\n      }\n    };\n  }\n\n  resize(width: number, height: number): void {\n    this.chart.resize(width, height);\n  }\n\n  remove(): void {\n    this.chart.destroy();\n  }\n}","import { IChartApi, ChartOptions } from './ichart-api';\nimport { ChartApi } from './chart-api';\n\nexport function createChart(container: HTMLElement, options: ChartOptions): IChartApi {\n  return new ChartApi(container, options);\n}"],"names":["VFC"],"mappings":"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"}