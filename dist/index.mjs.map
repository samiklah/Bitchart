{"version":3,"file":"index.mjs","sources":["../src/helpers/utils.ts","../src/scales.ts","../src/interactions.ts","../src/drawing/footprint.ts","../src/drawing/scales.ts","../src/drawing/grid.ts","../src/drawing/crosshair.ts","../src/drawing/measure.ts","../src/drawing.ts","../src/chart.ts","../src/api/volume-footprint-series-api.ts","../src/api/time-scale-api.ts","../src/api/price-scale-api.ts","../src/api/chart-api.ts","../src/api/create-chart.ts"],"sourcesContent":["/**\n * Utility functions and helpers for the Volume Footprint Chart library.\n * Contains reusable calculations for volume analysis, color mapping, and number formatting.\n */\n\n/**\n * Creates color mapping functions for buy and sell volumes based on opacity scaling.\n * @param sideMax Maximum volume on either buy or sell side\n * @param buyBase Base opacity for buy volumes\n * @param sellBase Base opacity for sell volumes\n * @returns Object with buyRGBA and sellRGBA functions\n */\nexport function createVolumeColorMappers(sideMax: number, buyBase: number = 0.15, sellBase: number = 0.15) {\n  const buyRGBA = (v: number) => `rgba(0,255,0,${buyBase + 0.55 * (v / sideMax)})`;\n  const sellRGBA = (v: number) => `rgba(255,0,0,${sellBase + 0.55 * (v / sideMax)})`;\n  return { buyRGBA, sellRGBA };\n}\n\n/**\n * Formats a number with K/M/T suffixes for large values.\n * @param v The number to format\n * @returns Formatted string\n */\nexport function formatNumber(v: number): string {\n  const a = Math.abs(v);\n  if (a >= 1e12) return (v / 1e12).toFixed(2) + \"T\";\n  if (a >= 1e6) return (v / 1e6).toFixed(2) + \"M\";\n  if (a >= 1e3) return (v / 1e3).toFixed(2) + \"K\";\n  return Math.round(v).toString();\n}\n\n/**\n * Calculates the Point of Control (POC) and Value Area (VAH/VAL) for volume profile analysis.\n * @param rows Sorted footprint levels (high to low price)\n * @returns Object containing POC index, VAH/VAL indices and prices, and total volume\n */\nexport function computeVolumeArea(rows: any[]): { pocIdx: number, vahIdx: number, valIdx: number, VAH: number, VAL: number, totalVol: number } {\n  const levelVols = rows.map(r => r.buy + r.sell);\n  const totalVol = levelVols.reduce((a, b) => a + b, 0);\n  let pocIdx = 0;\n  for (let i = 1; i < levelVols.length; i++) {\n    if (levelVols[i] > levelVols[pocIdx]) pocIdx = i;\n  }\n\n  let included = new Set([pocIdx]);\n  const enableProfile = rows.length > 3;\n  if (enableProfile) {\n    let acc = levelVols[pocIdx];\n    let up = pocIdx - 1, down = pocIdx + 1;\n    while (acc < 0.7 * totalVol && (up >= 0 || down < rows.length)) {\n      const upVol = up >= 0 ? levelVols[up] : -1;\n      const downVol = down < rows.length ? levelVols[down] : -1;\n      if (upVol >= downVol) {\n        if (up >= 0) { included.add(up); acc += levelVols[up]; up--; }\n        else { included.add(down); acc += levelVols[down]; down++; }\n      } else {\n        if (down < rows.length) { included.add(down); acc += levelVols[down]; down++; }\n        else { included.add(up); acc += levelVols[up]; up--; }\n      }\n    }\n  }\n\n  const vahIdx = Math.min(...included);\n  const valIdx = Math.max(...included);\n  const VAH = rows[vahIdx]?.price;\n  const VAL = rows[valIdx]?.price;\n\n  return { pocIdx, vahIdx, valIdx, VAH, VAL, totalVol };\n}","/**\n * Provides coordinate transformation and scaling utilities for the chart.\n * Converts between screen pixels, data indices, and price values with zoom and pan support.\n */\n\nimport { CandleData } from './types';\nimport { formatNumber } from './helpers/utils';\n\n/**\n * Handles coordinate transformations and scaling calculations for the chart.\n * Provides methods to convert between screen coordinates, data indices, and price levels.\n */\nexport class Scales {\n  private data: CandleData[] = [];\n  private margin: { top: number; bottom: number; left: number; right: number };\n  private view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number };\n  private canvasWidth: number;\n  private canvasHeight: number;\n  private showVolumeFootprint: boolean;\n  private TICK: number;\n  private baseRowPx: number;\n  private TEXT_VIS: { minZoomX: number; minRowPx: number; minBoxPx: number };\n\n  /**\n   * Creates a Scales instance for coordinate transformations.\n   * @param data Array of candlestick data\n   * @param margin Chart margin configuration\n   * @param view Current view state\n   * @param canvasWidth Canvas width in pixels\n   * @param canvasHeight Canvas height in pixels\n   * @param showVolumeFootprint Whether volume footprint is displayed\n   * @param TICK Price tick size\n   * @param baseRowPx Base row height in pixels\n   * @param TEXT_VIS Text visibility thresholds\n   */\n  constructor(\n    data: CandleData[],\n    margin: { top: number; bottom: number; left: number; right: number },\n    view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number },\n    canvasWidth: number,\n    canvasHeight: number,\n    showVolumeFootprint: boolean,\n    TICK: number,\n    baseRowPx: number,\n    TEXT_VIS: { minZoomX: number; minRowPx: number; minBoxPx: number }\n  ) {\n    this.data = data;\n    this.margin = margin;\n    this.view = view;\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.showVolumeFootprint = showVolumeFootprint;\n    this.TICK = TICK;\n    this.baseRowPx = baseRowPx;\n    this.TEXT_VIS = TEXT_VIS;\n  }\n\n  /** Returns the height of the chart area in pixels (excluding margins). */\n  chartHeight(): number {\n    return this.canvasHeight - this.margin.top - this.margin.bottom;\n  }\n\n  /** Returns the current row height in pixels, adjusted for zoom. */\n  rowHeightPx(): number {\n    return this.baseRowPx * this.view.zoomY;\n  }\n\n  /** Returns the scaled spacing between candles, depending on volume footprint mode. */\n  scaledSpacing(): number {\n    if (!this.showVolumeFootprint) {\n      return (15 + 1) * this.view.zoomX; // Candle width + 1px gap when volume footprint is off\n    }\n    return 132 * this.view.zoomX; // Reduced spacing for closer candle layout\n  }\n\n  scaledCandle(): number {\n    return 15 * this.view.zoomX; // BASE_CANDLE * zoomX\n  }\n\n  scaledBox(): number {\n    return 55 * this.view.zoomX; // BASE_BOX * zoomX\n  }\n\n  scaledImb(): number {\n    return 3 * this.view.zoomX; // Thinner imbalance boxes\n  }\n\n  shouldShowCellText(): boolean {\n    return (\n      this.view.zoomX >= this.TEXT_VIS.minZoomX &&\n      this.rowHeightPx() >= this.TEXT_VIS.minRowPx &&\n      this.scaledBox() >= this.TEXT_VIS.minBoxPx\n    );\n  }\n\n  priceToRowIndex(price: number): number {\n    return (this.ladderTop - price) / this.TICK + this.view.offsetRows;\n  }\n\n  rowIndexToPrice(row: number): number {\n    return this.ladderTop - (row - this.view.offsetRows) * this.TICK;\n  }\n\n  rowToY(row: number): number {\n    return this.margin.top + row * this.rowHeightPx();\n  }\n\n  priceToY(price: number): number {\n    return this.rowToY(this.priceToRowIndex(price));\n  }\n\n  indexToX(i: number, startIndex: number): number {\n    const s = this.scaledSpacing();\n    return this.margin.left + (i - startIndex) * s + s / 2 - this.xShift;\n  }\n\n  getVisibleRange(): { startIndex: number; endIndex: number } {\n    const s = this.scaledSpacing();\n    const pixelOffset = this.view.offsetX;\n    const startFloat = pixelOffset / s;\n    const startIndex = Math.max(0, Math.floor(startFloat));\n    const contentW = this.canvasWidth - this.margin.left - this.margin.right;\n    const visibleCount = Math.ceil(contentW / s) + 2;\n    const endIndex = Math.min(this.data.length, startIndex + visibleCount);\n    return { startIndex, endIndex };\n  }\n\n  computePriceBarLabels(): Array<{ price: number; y: number }> {\n    const pixelSpacing = 28;\n    const chartHeightPx = this.chartHeight();\n    const maxLabels = 7;\n    const numLabels = Math.min(maxLabels, Math.floor(chartHeightPx / pixelSpacing));\n\n    const pTop = this.rowIndexToPrice(0);\n    const pBot = this.rowIndexToPrice(Math.floor(chartHeightPx / this.rowHeightPx()));\n    const pMin = Math.min(pTop, pBot);\n    const pMax = Math.max(pTop, pBot);\n    const priceRange = pMax - pMin;\n\n    const stepPrice = Math.max(this.TICK, priceRange / Math.max(1, numLabels - 1));\n\n    let start = Math.ceil(pMin / stepPrice) * stepPrice;\n    const out = [];\n    for (let price = start; price <= pMax + 1e-6; price += stepPrice) {\n      out.push({ price: Math.round(price), y: this.priceToY(price) });\n    }\n    return out;\n  }\n\n  formatK(v: number): string {\n    return formatNumber(v);\n  }\n\n  private get xShift(): number {\n    const s = this.scaledSpacing();\n    const pixelOffset = this.view.offsetX;\n    const startFloat = pixelOffset / s;\n    const startIndex = Math.max(0, Math.floor(startFloat));\n    const shift = pixelOffset - startIndex * s;\n    return shift < 0 ? shift + s : shift;\n  }\n\n  screenXToDataIndex(screenX: number): number {\n    const vr = this.getVisibleRange();\n    const s = this.scaledSpacing();\n    const relativeX = screenX - this.margin.left + this.xShift - s / 2;\n    return vr.startIndex + Math.floor(relativeX / s);\n  }\n\n  // Exact fractional data index for precise drawing coordinates\n  screenXToExactDataIndex(screenX: number): number {\n    const vr = this.getVisibleRange();\n    const s = this.scaledSpacing();\n    const relativeX = screenX - this.margin.left + this.xShift - s / 2;\n    return vr.startIndex + relativeX / s;\n  }\n\n  screenYToPrice(screenY: number): number {\n    // Use the exact same calculation as the crosshair\n    return this.rowIndexToPrice(\n      (screenY - this.margin.top) / this.rowHeightPx() + this.view.offsetRows\n    );\n  }\n\n  private get ladderTop(): number {\n    if (this.data.length === 0) return 10000;\n    return Math.ceil(Math.max(...this.data.map(c => c.high)) / this.TICK) * this.TICK + 10 * this.TICK;\n  }\n}","/**\n * Manages user interactions and input handling for the Volume Footprint Chart.\n * Processes mouse/touch events, wheel zooming, panning, and measurement tools.\n */\n\nimport { VFCEvents, MeasureRectangle } from './types';\nimport { Scales } from './scales';\n\n/**\n * Handles user interactions with the chart, including mouse/touch events, zooming, panning, and measuring.\n * Manages crosshair positioning, momentum scrolling, and measurement tools.\n */\nexport class Interactions {\n  private canvas: HTMLCanvasElement;\n  private margin: { top: number; bottom: number; left: number; right: number };\n  private view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number };\n  private events: VFCEvents;\n  private crosshair: { x: number; y: number; visible: boolean };\n  private momentum = { raf: 0, vx: 0, lastTs: 0, active: false };\n  private readonly PAN_INVERT = { x: true, y: false };\n  private scales: Scales;\n\n\n  // Measure state\n  private isMeasureMode = false;\n  private measureRectangle: MeasureRectangle | null = null;\n\n  /**\n   * Creates an Interactions instance to handle user input for the chart.\n   * @param canvas The HTML canvas element\n   * @param margin Chart margin configuration\n   * @param view Current view state (zoom and offset)\n   * @param events Event callbacks\n   * @param crosshair Crosshair position state\n   * @param scales Scales instance for coordinate conversions\n   */\n  constructor(\n    canvas: HTMLCanvasElement,\n    margin: { top: number; bottom: number; left: number; right: number },\n    view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number },\n    events: VFCEvents,\n    crosshair: { x: number; y: number; visible: boolean },\n    scales: Scales\n  ) {\n    this.canvas = canvas;\n    this.margin = margin;\n    this.view = view;\n    this.events = events;\n    this.crosshair = crosshair;\n    this.scales = scales;\n    this.setupMouseTracking();\n  }\n\n  /**\n   * Handles mouse wheel events for zooming different chart areas.\n   * Zooms price axis when over price bar, time axis when over timeline, both when over chart body.\n   * @param e The wheel event\n   */\n  handleWheel(e: WheelEvent): void {\n    e.preventDefault();\n    const rect = this.canvas.getBoundingClientRect();\n    const mx = e.clientX - rect.left;\n    const my = e.clientY - rect.top;\n    const chartRight = this.canvas.clientWidth - this.margin.right;\n    const yBottom = this.margin.top + 600 - this.margin.top - this.margin.bottom; // chartHeight\n\n    const overPriceBar = mx > chartRight;\n    const overTimeline = my > yBottom;\n    const overChartBody = !overPriceBar && !overTimeline;\n\n    if (overPriceBar) {\n      this.view.zoomY *= (e.deltaY < 0 ? 1.1 : 0.9);\n      this.view.zoomY = Math.max(0.1, Math.min(8, this.view.zoomY));\n      this.events.onZoom?.(this.view.zoomX, this.view.zoomY);\n      this.clearMeasureRectangle();\n    } else if (overChartBody) {\n      const prev = this.view.zoomX;\n      const factor = (e.deltaY < 0 ? 1.1 : 0.9);\n      const next = Math.max(0.1, Math.min(8, prev * factor));\n      this.view.zoomX = next;\n      this.view.zoomY *= (next / prev); // Also zoom the price axis\n      this.view.zoomY = Math.max(0.1, Math.min(8, this.view.zoomY));\n      // Adjust offsetX to keep the same startIndex (prevent scrolling)\n      this.view.offsetX *= (next / prev);\n      this.events.onZoom?.(this.view.zoomX, this.view.zoomY);\n      this.clearMeasureRectangle();\n    } else if (overTimeline) {\n      // Timeline zoom: same mechanism as chart but only affects X axis\n      const prev = this.view.zoomX;\n      const factor = (e.deltaY < 0 ? 1.1 : 0.9);\n      const next = Math.max(0.1, Math.min(8, prev * factor));\n      this.view.zoomX = next;\n      this.view.offsetX *= (next / prev);\n      this.events.onZoom?.(this.view.zoomX, this.view.zoomY);\n      this.clearMeasureRectangle();\n    }\n  }\n\n  handlePointerDown(e: PointerEvent): void {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Check if we're in measure mode\n    if (this.isMeasureMode) {\n      this.handleMeasurePointerDown(e, x, y);\n      return;\n    }\n\n    // Normal pan mode\n    this.canvas.setPointerCapture(e.pointerId);\n    let lastX = e.clientX;\n    let lastY = e.clientY;\n    let velX = 0;\n    let lastT = performance.now();\n\n    const onMove = (ev: PointerEvent) => {\n      const now = performance.now();\n      const dt = Math.max(1, now - lastT);\n      const dx = ev.clientX - lastX;\n      const dy = ev.clientY - lastY;\n      lastX = ev.clientX;\n      lastY = ev.clientY;\n      lastT = now;\n\n      // 1:1 mouse movement like the original volume_footprint_chart.html\n      this.view.offsetX += (this.PAN_INVERT.x ? -dx : dx);\n      this.view.offsetRows += (this.PAN_INVERT.y ? -dy : dy) / (22 * this.view.zoomY); // rowHeightPx()\n      velX = (this.PAN_INVERT.x ? -dx : dx) / dt;\n      this.events.onPan?.(this.view.offsetX, this.view.offsetRows);\n      this.clearMeasureRectangle();\n    };\n\n    const onUp = () => {\n      this.canvas.releasePointerCapture(e.pointerId);\n      this.canvas.removeEventListener('pointermove', onMove);\n      this.canvas.removeEventListener('pointerup', onUp);\n      this.canvas.removeEventListener('pointercancel', onUp);\n      // Removed momentum to stop chart from continuing to move after mouse release\n    };\n\n    this.canvas.addEventListener('pointermove', onMove);\n    this.canvas.addEventListener('pointerup', onUp);\n    this.canvas.addEventListener('pointercancel', onUp);\n  }\n\n\n  private handleMeasurePointerDown(e: PointerEvent, x: number, y: number): void {\n    // Check if we're over the chart area\n    const chartRight = this.canvas.clientWidth - this.margin.right;\n    const canvasHeight = this.canvas.height / window.devicePixelRatio;\n    const yBottom = canvasHeight - this.margin.bottom;\n\n    const overChartBody = x >= this.margin.left && x <= chartRight &&\n                          y >= this.margin.top && y <= yBottom;\n\n    if (!overChartBody) return;\n\n    this.canvas.setPointerCapture(e.pointerId);\n\n    // Start measuring from this point - store screen coordinates directly\n    this.measureRectangle = {\n      startX: x,\n      startY: y,\n      endX: x,\n      endY: y\n    };\n\n    const onMove = (ev: PointerEvent) => {\n      const rect = this.canvas.getBoundingClientRect();\n      const currentX = ev.clientX - rect.left;\n      const currentY = ev.clientY - rect.top;\n\n      // Update the end point of the measure rectangle\n      if (this.measureRectangle) {\n        this.measureRectangle.endX = currentX;\n        this.measureRectangle.endY = currentY;\n      }\n\n      // Trigger redraw\n      this.events.onMouseMove?.(currentX, currentY, true);\n    };\n\n    const onUp = () => {\n      this.canvas.releasePointerCapture(e.pointerId);\n      this.canvas.removeEventListener('pointermove', onMove);\n      this.canvas.removeEventListener('pointerup', onUp);\n      this.canvas.removeEventListener('pointercancel', onUp);\n    };\n\n    this.canvas.addEventListener('pointermove', onMove);\n    this.canvas.addEventListener('pointerup', onUp);\n    this.canvas.addEventListener('pointercancel', onUp);\n  }\n\n\n\n\n\n  // Public methods for controlling measure mode\n  setMeasureMode(enabled: boolean): void {\n    this.isMeasureMode = enabled;\n    if (!enabled) {\n      this.measureRectangle = null;\n    }\n  }\n\n  getMeasureRectangle(): MeasureRectangle | null {\n    return this.measureRectangle;\n  }\n\n  clearMeasureRectangle(): void {\n    this.measureRectangle = null;\n  }\n\n  private cancelMomentum(): void {\n    if (this.momentum.raf) {\n      cancelAnimationFrame(this.momentum.raf);\n      this.momentum.raf = 0;\n    }\n    this.momentum.active = false;\n  }\n\n  private startMomentum(vx: number): void {\n    this.momentum.vx = vx;\n    this.momentum.lastTs = 0;\n    this.momentum.active = true;\n    if (!this.momentum.raf) {\n      this.momentum.raf = requestAnimationFrame(this.stepMomentum.bind(this));\n    }\n  }\n\n  private stepMomentum(ts: number): void {\n    if (!this.momentum.active) {\n      this.momentum.raf = 0;\n      return;\n    }\n    if (!this.momentum.lastTs) this.momentum.lastTs = ts;\n    const dt = ts - this.momentum.lastTs;\n    this.momentum.lastTs = ts;\n    this.view.offsetX += this.momentum.vx * dt;\n    this.momentum.vx *= 0.98;\n    if (Math.abs(this.momentum.vx) < 0.001) {\n      this.cancelMomentum();\n    }\n  }\n\n  private setupMouseTracking(): void {\n    this.canvas.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    this.canvas.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n  }\n\n  private handleMouseMove(e: MouseEvent): void {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Check if mouse is over the chart area\n    const chartRight = this.canvas.clientWidth - this.margin.right;\n    const canvasHeight = this.canvas.height / window.devicePixelRatio;\n    const yBottom = canvasHeight - this.margin.bottom;\n\n    const overChartBody = x >= this.margin.left && x <= chartRight &&\n                         y >= this.margin.top && y <= yBottom;\n\n    if (overChartBody) {\n      this.crosshair.x = x;\n      this.crosshair.y = y;\n      this.crosshair.visible = true;\n    } else {\n      this.crosshair.visible = false;\n    }\n\n    // Trigger redraw\n    this.events.onMouseMove?.(x, y, this.crosshair.visible);\n  }\n\n  private handleMouseLeave(): void {\n    this.crosshair.visible = false;\n    this.events.onMouseMove?.(-1, -1, false);\n  }\n}","/**\n * Footprint-specific drawing functions for the Volume Footprint Chart.\n * Handles rendering of volume profiles, imbalance markers, and related visualizations.\n */\n\nimport { CandleData } from '../types';\nimport { Scales } from '../scales';\nimport { createVolumeColorMappers, computeVolumeArea } from '../helpers/utils';\n\n/**\n * Draws the footprint volume boxes for buy and sell volumes at each price level.\n */\nexport function drawFootprintBoxes(\n  ctx: CanvasRenderingContext2D,\n  rows: any[],\n  pocIdx: number,\n  enableProfile: boolean,\n  leftX: number,\n  rightX: number,\n  scales: Scales,\n  theme: any\n): { minRow: number, maxRow: number, totBuy: number, totSell: number } {\n  const sideMax = Math.max(...rows.map(f => Math.max(f.buy, f.sell)), 1);\n  const buyBase = theme.volumeBuyBase ?? 0.15;\n  const sellBase = theme.volumeSellBase ?? 0.15;\n  const { buyRGBA, sellRGBA } = createVolumeColorMappers(sideMax, buyBase, sellBase);\n\n  let minRow = Infinity, maxRow = -Infinity;\n  let totBuy = 0, totSell = 0;\n\n  for (let r = 0; r < rows.length; r++) {\n    const f = rows[r];\n    const row = scales.priceToRowIndex(f.price);\n    const yTop = scales.rowToY(row - 0.5);\n    const yBot = scales.rowToY(row + 0.5);\n    const h = Math.max(1, yBot - yTop);\n    minRow = Math.min(minRow, row - 0.5);\n    maxRow = Math.max(maxRow, row + 0.5);\n    totBuy += f.buy;\n    totSell += f.sell;\n\n    const isPOC = enableProfile && (r === pocIdx);\n    ctx.fillStyle = isPOC ? (theme.pocColor || '#808080') : sellRGBA(f.sell);\n    ctx.fillRect(leftX, yTop, scales.scaledBox(), h);\n    ctx.fillStyle = isPOC ? (theme.pocColor || '#808080') : buyRGBA(f.buy);\n    ctx.fillRect(rightX, yTop, scales.scaledBox(), h);\n  }\n\n  return { minRow, maxRow, totBuy, totSell };\n}\n\n/**\n * Draws imbalance markers for levels where buy or sell volume significantly exceeds adjacent levels.\n */\nexport function drawImbalanceMarkers(\n  ctx: CanvasRenderingContext2D,\n  rows: any[],\n  leftX: number,\n  rightX: number,\n  scales: Scales,\n  theme: any\n): void {\n  for (let r = 0; r < rows.length; r++) {\n    const f = rows[r];\n    const prev = rows[r - 1];\n    const next = rows[r + 1];\n    const row = scales.priceToRowIndex(f.price);\n    const yTop = scales.rowToY(row - 0.5);\n    const yBot = scales.rowToY(row + 0.5);\n    const h = Math.max(1, yBot - yTop);\n    if (prev && f.sell >= 3 * Math.max(1, prev.buy)) {\n      ctx.fillStyle = theme.imbalanceSell || '#dc2626';\n      ctx.fillRect(leftX - scales.scaledImb() - 1, yTop, scales.scaledImb(), h);\n    }\n    if (next && f.buy >= 3 * Math.max(1, next.sell)) {\n      ctx.fillStyle = theme.imbalanceBuy || '#16a34a';\n      ctx.fillRect(rightX + scales.scaledBox() + 1, yTop, scales.scaledImb(), h);\n    }\n  }\n}\n\n/**\n * Draws volume numbers inside the footprint boxes.\n */\nexport function drawVolumeNumbers(\n  ctx: CanvasRenderingContext2D,\n  rows: any[],\n  pocIdx: number,\n  enableProfile: boolean,\n  leftX: number,\n  rightX: number,\n  scales: Scales,\n  theme: any,\n  zoomX: number\n): void {\n  const fontSize = Math.max(8, Math.min(16, 11 * zoomX));\n  ctx.font = `${fontSize}px system-ui`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  for (let r = 0; r < rows.length; r++) {\n    const f = rows[r];\n    const row = scales.priceToRowIndex(f.price);\n    const y = scales.rowToY(row);\n    const isPOC = enableProfile && (r === pocIdx);\n    ctx.fillStyle = isPOC ? (theme.pocTextColor || theme.textColorBright || '#ffffff') : (theme.textColorBright || '#ddd');\n    ctx.fillText(scales.formatK(f.sell), leftX + scales.scaledBox() / 2, y);\n    ctx.fillText(scales.formatK(f.buy), rightX + scales.scaledBox() / 2, y);\n  }\n}\n\n/**\n * Draws the Value Area High (VAH) and Value Area Low (VAL) boundary lines and labels.\n */\nexport function drawValueAreaBoundaries(\n  ctx: CanvasRenderingContext2D,\n  cx: number,\n  half: number,\n  VAH: number,\n  VAL: number,\n  leftX: number,\n  rightX: number,\n  scales: Scales,\n  theme: any,\n  zoomX: number\n): void {\n  const rVah = scales.priceToRowIndex(VAH), rVal = scales.priceToRowIndex(VAL);\n  const yVah = scales.rowToY(rVah - 0.5);\n  const yVal = scales.rowToY(rVal + 0.5);\n  const rightEdge = rightX + scales.scaledBox();\n\n  ctx.save();\n  ctx.setLineDash([4, 2]);\n  ctx.strokeStyle = theme.vahValColor || '#9ca3af';\n  ctx.beginPath();\n  ctx.moveTo(leftX, yVah);\n  ctx.lineTo(rightEdge, yVah);\n  ctx.stroke();\n  ctx.beginPath();\n  ctx.moveTo(leftX, yVal);\n  ctx.lineTo(rightEdge, yVal);\n  ctx.stroke();\n  ctx.setLineDash([]);\n\n  const vahFontSize = Math.max(6, Math.min(12, 8 * zoomX));\n  ctx.fillStyle = theme.vahValLabelColor || '#cfd3d6';\n  ctx.font = `${vahFontSize}px monospace`;\n  ctx.textAlign = 'left';\n  ctx.textBaseline = 'middle';\n  const labelX = cx - half - scales.scaledBox() + 3;\n  ctx.fillText('VAH', labelX, yVah);\n  ctx.fillText('VAL', labelX, yVal);\n  ctx.restore();\n}\n\n/**\n * Draws the delta (buy - sell) and total volume labels below the footprint.\n */\nexport function drawDeltaTotalLabels(\n  ctx: CanvasRenderingContext2D,\n  cx: number,\n  maxRow: number,\n  totBuy: number,\n  totSell: number,\n  totalVol: number,\n  scales: Scales,\n  theme: any,\n  zoomX: number\n): void {\n  const yLowFootprint = scales.rowToY(maxRow) + 2;\n  const delta = totBuy - totSell;\n  const deltaFontSize = Math.max(8, Math.min(18, 12 * zoomX));\n  ctx.textAlign = 'center';\n  ctx.font = `${deltaFontSize}px system-ui`;\n  ctx.fillStyle = delta >= 0 ? (theme.deltaPositive || '#16a34a') : (theme.deltaNegative || '#dc2626');\n  ctx.fillText(`Delta ${scales.formatK(delta)}`, cx, yLowFootprint + 14);\n  ctx.fillStyle = theme.totalColor || '#fff';\n  ctx.fillText(`Total ${scales.formatK(totalVol)}`, cx, yLowFootprint + 32);\n}\n\n/**\n * Draws the traditional candlestick wick (high/low line) and body (open/close rectangle).\n */\nexport function drawCandleWickAndBody(\n  ctx: CanvasRenderingContext2D,\n  cx: number,\n  half: number,\n  candle: CandleData,\n  scales: Scales,\n  theme: any\n): void {\n  const yHigh = scales.priceToY(candle.high);\n  const yLow = scales.priceToY(candle.low);\n  const yOpen = scales.priceToY(candle.open);\n  const yClose = scales.priceToY(candle.close);\n  const bull = candle.close >= candle.open;\n  const color = bull ? (theme.candleBull || '#26a69a') : (theme.candleBear || '#ef5350');\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(cx, yHigh);\n  ctx.lineTo(cx, yLow);\n  ctx.stroke();\n  ctx.fillStyle = color;\n  ctx.fillRect(cx - half, Math.min(yOpen, yClose), scales.scaledCandle(), Math.abs(yClose - yOpen));\n}\n\n/**\n * Main footprint drawing function that orchestrates all footprint-related rendering.\n */\nexport function drawFootprint(\n  ctx: CanvasRenderingContext2D,\n  candle: CandleData,\n  i: number,\n  startIndex: number,\n  scales: Scales,\n  theme: any,\n  view: any,\n  showVolumeFootprint: boolean\n): void {\n  const cx = scales.indexToX(i, startIndex);\n  const half = scales.scaledCandle() / 2;\n\n  if (showVolumeFootprint) {\n    const rows = candle.footprint.slice().sort((a, b) => b.price - a.price);\n    const enableProfile = rows.length > 3;\n\n    const { pocIdx, vahIdx, valIdx, VAH, VAL, totalVol } = computeVolumeArea(rows);\n\n    const leftX = cx - half - scales.scaledBox();\n    const rightX = cx + half;\n\n    // Draw footprint boxes and calculate totals\n    const { minRow, maxRow, totBuy, totSell } = drawFootprintBoxes(ctx, rows, pocIdx, enableProfile, leftX, rightX, scales, theme);\n\n    // Draw imbalance markers\n    drawImbalanceMarkers(ctx, rows, leftX, rightX, scales, theme);\n\n    // Draw volume numbers\n    if (scales.shouldShowCellText()) {\n      drawVolumeNumbers(ctx, rows, pocIdx, enableProfile, leftX, rightX, scales, theme, view.zoomX);\n    }\n\n    // Draw VAH/VAL boundaries and labels\n    if (enableProfile && scales.shouldShowCellText()) {\n      drawValueAreaBoundaries(ctx, cx, half, VAH, VAL, leftX, rightX, scales, theme, view.zoomX);\n    }\n\n    // Draw delta and total volume labels\n    if (scales.shouldShowCellText()) {\n      drawDeltaTotalLabels(ctx, cx, maxRow, totBuy, totSell, totalVol, scales, theme, view.zoomX);\n    }\n  }\n\n  // Draw candle wick and body\n  drawCandleWickAndBody(ctx, cx, half, candle, scales, theme);\n}","/**\n * Scale and axis drawing functions for the Volume Footprint Chart.\n * Handles rendering of price bars, timeline, and related scale elements.\n */\n\nimport { Scales } from '../scales';\n\n/**\n * Draws the price bar on the right side and price labels.\n */\nexport function drawPriceBar(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  margin: any,\n  scales: Scales,\n  theme: any\n): void {\n  const right = width - margin.right;\n  ctx.fillStyle = theme.scaleBackground || '#111';\n  ctx.fillRect(right, 0, margin.right, height);\n  ctx.strokeStyle = theme.scaleBorder || '#444';\n  ctx.strokeRect(right + 0.5, margin.top, 0.5, height - margin.top - margin.bottom);\n\n  // Price labels\n  ctx.fillStyle = theme.textColor || '#aaa';\n  ctx.font = '12px system-ui';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  const labels = scales.computePriceBarLabels();\n  for (const { price, y } of labels) {\n    ctx.fillText(scales.formatK(price), right + margin.right / 2, y);\n  }\n}\n\n/**\n * Draws the timeline at the bottom with time labels.\n */\nexport function drawTimeline(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  margin: any,\n  scales: Scales,\n  data: any[],\n  theme: any\n): void {\n  const bottomY = margin.top + (height - margin.top - margin.bottom);\n  const chartW = width - margin.left - margin.right;\n  ctx.fillStyle = theme.scaleBackground || '#111';\n  ctx.fillRect(margin.left, bottomY, chartW, margin.bottom);\n  ctx.strokeStyle = theme.scaleBorder || '#444';\n  ctx.beginPath();\n  ctx.moveTo(margin.left, bottomY + 0.5);\n  ctx.lineTo(margin.left + chartW, bottomY + 0.5);\n  ctx.stroke();\n\n  // Timeline labels - extended to show future times\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(margin.left, bottomY, chartW, margin.bottom);\n  ctx.clip();\n  ctx.fillStyle = theme.textColor || '#aaa';\n  ctx.font = '12px system-ui';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  const step = Math.max(1, Math.floor(120 / scales.scaledSpacing()));\n  const vr = scales.getVisibleRange();\n  // Extend timeline to show future times beyond current data\n  const extendedStart = Math.max(0, vr.startIndex - 10);\n  const extendedEnd = vr.endIndex + 30; // Show 30 future time slots\n  for (let i = extendedStart; i < extendedEnd; i += step) {\n    const x = scales.indexToX(i, vr.startIndex);\n    let date: Date;\n    if (i < data.length && data[i]) {\n      date = new Date(data[i].time);\n    } else {\n      // Extrapolate future times based on data intervals\n      if (data.length > 1) {\n        const lastTime = new Date(data[data.length - 1].time).getTime();\n        const prevTime = new Date(data[data.length - 2].time).getTime();\n        const interval = lastTime - prevTime; // Time between last two data points\n        date = new Date(lastTime + (i - data.length + 1) * interval);\n      } else {\n        // Fallback: assume 1 minute intervals\n        const lastTime = data.length > 0 ?\n          new Date(data[data.length - 1].time).getTime() :\n          Date.now();\n        date = new Date(lastTime + (i - Math.max(0, data.length - 1)) * 60000);\n      }\n    }\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const t = `${hours}:${minutes}`;\n    ctx.fillText(t, x, bottomY + margin.bottom / 2);\n  }\n  ctx.restore();\n}\n\n/**\n * Draws the complete scales (price bar and timeline).\n */\nexport function drawScales(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  margin: any,\n  scales: Scales,\n  data: any[],\n  theme: any\n): void {\n  drawPriceBar(ctx, width, height, margin, scales, theme);\n  drawTimeline(ctx, width, height, margin, scales, data, theme);\n}","/**\n * Grid and bounds drawing functions for the Volume Footprint Chart.\n * Handles background grid lines and chart boundary visualization.\n */\n\nimport { Scales } from '../scales';\n\n/**\n * Draws the background grid lines.\n */\nexport function drawGrid(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  margin: any,\n  scales: Scales,\n  theme: any\n): void {\n  const chartRight = width - margin.right;\n  ctx.strokeStyle = theme.gridColor || '#333';\n  ctx.lineWidth = 1;\n  const gridSpacing = 28;\n  const numLines = Math.floor(scales.chartHeight() / gridSpacing);\n  ctx.beginPath();\n  for (let i = 0; i <= numLines; i++) {\n    const y = margin.top + i * gridSpacing;\n    ctx.moveTo(margin.left, y);\n    ctx.lineTo(chartRight, y);\n  }\n  ctx.stroke();\n\n  const vr = scales.getVisibleRange();\n  ctx.beginPath();\n  for (let i = vr.startIndex; i < vr.endIndex; i++) {\n    const x = scales.indexToX(i, vr.startIndex) + scales.scaledSpacing() / 2;\n    ctx.moveTo(x, margin.top);\n    ctx.lineTo(x, margin.top + scales.chartHeight());\n  }\n  ctx.strokeStyle = theme.gridLightColor || '#252525';\n  ctx.stroke();\n}\n\n/**\n * Draws chart boundary outlines and gutters.\n */\nexport function drawBounds(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  margin: any,\n  scales: Scales\n): void {\n  const chartW = width - margin.left - margin.right;\n  const chartH = scales.chartHeight();\n  const rightX = width - margin.right;\n  const bottomY = margin.top + chartH;\n\n  ctx.save();\n  // shade outside chart area slightly so user sees gutters\n  ctx.fillStyle = 'rgba(255, 255, 0, 0.05)';\n  // top gutter\n  ctx.fillRect(0, 0, width, margin.top);\n  // left gutter\n  ctx.fillRect(0, margin.top, margin.left, chartH);\n  // right price bar area (already visible)\n  // bottom timeline area (already visible)\n\n  // outline chart rect\n  ctx.setLineDash([6, 3]);\n  ctx.strokeStyle = '#f59e0b';\n  ctx.lineWidth = 1.5;\n  ctx.strokeRect(margin.left + 0.5, margin.top + 0.5, chartW, chartH);\n\n  // outline price bar and timeline for clarity\n  ctx.strokeStyle = '#22d3ee'; // cyan for scales\n  // price bar\n  ctx.strokeRect(rightX + 0.5, 0.5, margin.right - 1, height - 1);\n  // timeline\n  ctx.strokeRect(margin.left + 0.5, bottomY + 0.5, chartW, margin.bottom - 1);\n  ctx.setLineDash([]);\n  ctx.restore();\n}","/**\n * Crosshair and price label drawing functions for the Volume Footprint Chart.\n * Handles cursor tracking and current price display.\n */\n\nimport { Scales } from '../scales';\n\n/**\n * Draws the crosshair lines and labels at the current mouse position.\n */\nexport function drawCrosshair(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  margin: any,\n  crosshair: { x: number; y: number; visible: boolean },\n  scales: Scales,\n  data: any[],\n  theme: any\n): void {\n  if (!crosshair.visible) return;\n\n  const chartRight = width - margin.right;\n  const yBottom = margin.top + (height - margin.top - margin.bottom);\n\n  ctx.save();\n\n  // Draw vertical line\n  ctx.strokeStyle = theme.textColor || '#aaa';\n  ctx.lineWidth = 1;\n  ctx.setLineDash([2, 2]);\n  ctx.beginPath();\n  ctx.moveTo(crosshair.x, margin.top);\n  ctx.lineTo(crosshair.x, yBottom);\n  ctx.stroke();\n\n  // Draw horizontal line\n  ctx.beginPath();\n  ctx.moveTo(margin.left, crosshair.y);\n  ctx.lineTo(chartRight, crosshair.y);\n  ctx.stroke();\n\n  // Draw price label on right side\n  const price = scales.rowIndexToPrice(\n    (crosshair.y - margin.top) / scales.rowHeightPx()\n  );\n  ctx.setLineDash([]);\n  ctx.fillStyle = theme.scaleBackground || '#111';\n  ctx.fillRect(chartRight, crosshair.y - 8, margin.right, 16);\n  ctx.strokeStyle = theme.scaleBorder || '#444';\n  ctx.strokeRect(chartRight, crosshair.y - 8, margin.right, 16);\n  ctx.fillStyle = theme.textColor || '#aaa';\n  ctx.font = 'bold 12px system-ui';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillText(scales.formatK(price), chartRight + margin.right / 2, crosshair.y);\n\n  // Draw time label on bottom\n  const index = scales.screenXToDataIndex(crosshair.x);\n  let timeStr = '--:--';\n  if (index >= 0 && index < data.length && data[index]) {\n    const date = new Date(data[index].time);\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    timeStr = `${hours}:${minutes}`;\n  }\n\n  ctx.fillStyle = theme.scaleBackground || '#111';\n  ctx.fillRect(crosshair.x - 20, yBottom, 40, margin.bottom);\n  ctx.strokeStyle = theme.scaleBorder || '#444';\n  ctx.strokeRect(crosshair.x - 20, yBottom, 40, margin.bottom);\n  ctx.fillStyle = theme.textColor || '#aaa';\n  ctx.font = '11px system-ui';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillText(timeStr, crosshair.x, yBottom + margin.bottom / 2);\n\n  ctx.restore();\n}\n\n/**\n * Draws the current price label with a dashed line across the chart.\n */\nexport function drawCurrentPriceLabel(\n  ctx: CanvasRenderingContext2D,\n  width: number,\n  lastPrice: number | null,\n  margin: any,\n  scales: Scales,\n  theme: any\n): void {\n  if (!lastPrice) return;\n\n  const right = width - margin.right;\n  const y = scales.priceToY(lastPrice);\n\n  ctx.save();\n\n  // Draw dashed line across the chart at the last price level\n  ctx.setLineDash([5, 5]);\n  ctx.strokeStyle = theme.textColor || '#aaa';\n  ctx.lineWidth = 1;\n  ctx.beginPath();\n  ctx.moveTo(margin.left, y);\n  ctx.lineTo(right, y);\n  ctx.stroke();\n  ctx.setLineDash([]);\n\n  // Draw price label on the price bar (right side scale area)\n  const labelText = scales.formatK(lastPrice);\n  ctx.font = 'bold 12px system-ui';\n  const textWidth = ctx.measureText(labelText).width;\n  const boxWidth = textWidth + 8;\n  const boxHeight = 18;\n\n  // Position the label in the price bar area\n  const boxX = right + 2;\n  const boxY = y - boxHeight / 2;\n\n  // Draw background\n  ctx.fillStyle = '#26a69a';  // Green background like in the image\n  ctx.fillRect(boxX, boxY, boxWidth, boxHeight);\n\n  // Draw border\n  ctx.strokeStyle = '#ffffff';\n  ctx.lineWidth = 1;\n  ctx.strokeRect(boxX, boxY, boxWidth, boxHeight);\n\n  // Draw price text\n  ctx.fillStyle = '#ffffff';  // White text\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillText(labelText, boxX + boxWidth / 2, boxY + boxHeight / 2);\n\n  ctx.restore();\n}","/**\n * Measurement tool drawing functions for the Volume Footprint Chart.\n * Handles drawing of measurement rectangles and associated data labels.\n */\n\nimport { MeasureRectangle } from '../types';\nimport { Scales } from '../scales';\n\n/**\n * Draws the measurement rectangle and associated data labels.\n */\nexport function drawMeasureRectangle(\n  ctx: CanvasRenderingContext2D,\n  measureRectangle: MeasureRectangle | null,\n  scales: Scales,\n  theme: any\n): void {\n  if (!measureRectangle) return;\n\n  ctx.save();\n\n  // Use screen coordinates directly\n  const startX = measureRectangle.startX;\n  const startY = measureRectangle.startY;\n  const endX = measureRectangle.endX;\n  const endY = measureRectangle.endY;\n\n  // Calculate rectangle bounds\n  const rectX = Math.min(startX, endX);\n  const rectY = Math.min(startY, endY);\n  const rectWidth = Math.abs(endX - startX);\n  const rectHeight = Math.abs(endY - startY);\n\n  // Calculate price and time differences using current screen positions\n  const startPrice = scales.screenYToPrice(startY);\n  const endPrice = scales.screenYToPrice(endY);\n  const startIndex = scales.screenXToDataIndex(startX);\n  const endIndex = scales.screenXToDataIndex(endX);\n\n  const priceDiff = endPrice - startPrice;\n  const timeDiff = endIndex - startIndex;\n  const isPositive = priceDiff >= 0;\n\n  // Draw light green/red rectangle\n  const rectColor = isPositive ? 'rgba(22, 163, 74, 0.2)' : 'rgba(220, 38, 38, 0.2)'; // Light green/red\n  ctx.fillStyle = rectColor;\n  ctx.fillRect(rectX, rectY, rectWidth, rectHeight);\n\n  // Draw rectangle border\n  const borderColor = isPositive ? 'rgba(22, 163, 74, 0.8)' : 'rgba(220, 38, 38, 0.8)';\n  ctx.strokeStyle = borderColor;\n  ctx.lineWidth = 1;\n  ctx.strokeRect(rectX, rectY, rectWidth, rectHeight);\n\n  // Draw measure data box below the rectangle with all details\n  const centerX = rectX + rectWidth / 2;\n\n  // Calculate percentage change\n  const percentChange = startPrice !== 0 ? (priceDiff / startPrice) * 100 : 0;\n\n  // Prepare all text lines\n  const priceSign = priceDiff >= 0 ? '+' : '';\n  const priceText = `${priceSign}${priceDiff.toFixed(2)} (${percentChange >= 0 ? '+' : ''}${percentChange.toFixed(2)}%)`;\n  const startPriceText = `Start: ${startPrice.toFixed(2)}`;\n  const endPriceText = `End: ${endPrice.toFixed(2)}`;\n  const timeSign = timeDiff >= 0 ? '+' : '';\n  const timeText = `ΔT: ${timeSign}${timeDiff} bars`;\n\n  const lines = [priceText, startPriceText, endPriceText, timeText];\n\n  // Bigger font\n  ctx.font = '14px system-ui';\n  const lineHeight = 18;\n  const padding = 8;\n  const maxWidth = Math.max(...lines.map(line => ctx.measureText(line).width));\n  const boxWidth = maxWidth + padding * 2;\n  const boxHeight = lines.length * lineHeight + padding * 2;\n  const boxX = centerX - boxWidth / 2;\n  const boxY = rectY + rectHeight + 8;\n\n  // Box colors\n  const boxColor = isPositive ? '#16a34a' : '#dc2626'; // Green for positive, red for negative\n  const textColor = '#ffffff';\n\n  // Draw box background\n  ctx.fillStyle = boxColor;\n  ctx.fillRect(boxX, boxY, boxWidth, boxHeight);\n\n  // Draw box border\n  ctx.strokeStyle = textColor;\n  ctx.lineWidth = 1;\n  ctx.strokeRect(boxX, boxY, boxWidth, boxHeight);\n\n  // Draw text lines\n  ctx.fillStyle = textColor;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  lines.forEach((line, index) => {\n    const y = boxY + padding + index * lineHeight;\n    ctx.fillText(line, centerX, y);\n  });\n\n  ctx.restore();\n}","import { CandleData, VFCTheme, MeasureRectangle } from './types';\nimport { Scales } from './scales';\nimport { drawFootprint } from './drawing/footprint';\nimport { drawScales } from './drawing/scales';\nimport { drawGrid, drawBounds } from './drawing/grid';\nimport { drawCrosshair, drawCurrentPriceLabel } from './drawing/crosshair';\nimport { drawMeasureRectangle } from './drawing/measure';\n\n/**\n * Handles all rendering operations for the Volume Footprint Chart.\n * Responsible for drawing grid, chart elements, scales, crosshair, and measurements.\n */\n\nexport class Drawing {\n  private ctx: CanvasRenderingContext2D;\n  private data: CandleData[];\n  private margin: { top: number; bottom: number; left: number; right: number };\n  private view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number };\n  private showGrid: boolean;\n  private showBounds: boolean;\n  private showVolumeFootprint: boolean;\n  private showVolumeHeatmap: boolean;\n  private scales: Scales;\n  private theme: VFCTheme;\n  private crosshair: { x: number; y: number; visible: boolean };\n  private lastPrice: number | null;\n  private interactions: any; // Reference to Interactions class to get dynamic measure rectangle\n\n  constructor(\n    ctx: CanvasRenderingContext2D,\n    data: CandleData[],\n    margin: { top: number; bottom: number; left: number; right: number },\n    view: { zoomY: number; zoomX: number; offsetRows: number; offsetX: number },\n    showGrid: boolean,\n    showBounds: boolean,\n    showVolumeFootprint: boolean,\n    showVolumeHeatmap: boolean,\n    scales: Scales,\n    theme: VFCTheme,\n    crosshair: { x: number; y: number; visible: boolean },\n    lastPrice: number | null,\n    interactions: any\n  ) {\n    this.ctx = ctx;\n    this.data = data;\n    this.margin = margin;\n    this.view = view;\n    this.showGrid = showGrid;\n    this.showBounds = showBounds;\n    this.showVolumeFootprint = showVolumeFootprint;\n    this.showVolumeHeatmap = showVolumeHeatmap;\n    this.scales = scales;\n    this.theme = theme;\n    this.crosshair = crosshair;\n    this.lastPrice = lastPrice;\n    this.interactions = interactions;\n  }\n\n  drawAll(): void {\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    const height = this.ctx.canvas.height / window.devicePixelRatio;\n    this.ctx.clearRect(0, 0, width, height);\n    if (this.showGrid) drawGrid(this.ctx, width, this.margin, this.scales, this.theme);\n    if (this.showVolumeHeatmap) this.drawVolumeHeatmap();\n    this.drawChart();\n    drawMeasureRectangle(this.ctx, this.interactions.getMeasureRectangle(), this.scales, this.theme);\n    drawScales(this.ctx, width, height, this.margin, this.scales, this.data, this.theme);\n    drawCurrentPriceLabel(this.ctx, width, this.lastPrice, this.margin, this.scales, this.theme);\n    if (this.crosshair.visible) drawCrosshair(this.ctx, width, height, this.margin, this.crosshair, this.scales, this.data, this.theme);\n    if (this.showBounds) drawBounds(this.ctx, width, height, this.margin, this.scales);\n  }\n\n  private drawChart(): void {\n    this.ctx.save();\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    this.ctx.beginPath();\n    this.ctx.rect(\n      this.margin.left,\n      this.margin.top,\n      width - this.margin.left - this.margin.right,\n      this.scales.chartHeight()\n    );\n    this.ctx.clip();\n\n    const vr = this.scales.getVisibleRange();\n    for (let i = vr.startIndex; i < vr.endIndex; i++) {\n      drawFootprint(this.ctx, this.data[i], i, vr.startIndex, this.scales, this.theme, this.view, this.showVolumeFootprint);\n    }\n    this.ctx.restore();\n  }\n\n  private drawVolumeHeatmap(): void {\n    const vr = this.scales.getVisibleRange();\n    if (vr.endIndex <= vr.startIndex) return;\n\n    // Aggregate volumes per price level across visible candles\n    const volumeMap = new Map<number, number>();\n    for (let i = vr.startIndex; i < vr.endIndex; i++) {\n      const candle = this.data[i];\n      for (const level of candle.footprint) {\n        const totalVol = level.buy + level.sell;\n        volumeMap.set(level.price, (volumeMap.get(level.price) || 0) + totalVol);\n      }\n    }\n\n    if (volumeMap.size === 0) return;\n\n    // Find max volume\n    const maxVolume = Math.max(...volumeMap.values());\n\n    // Draw heatmap\n    this.ctx.save();\n    const width = this.ctx.canvas.width / window.devicePixelRatio;\n    this.ctx.beginPath();\n    this.ctx.rect(\n      this.margin.left,\n      this.margin.top,\n      width - this.margin.left - this.margin.right,\n      this.scales.chartHeight()\n    );\n    this.ctx.clip();\n\n    for (const [price, volume] of volumeMap) {\n      const row = this.scales.priceToRowIndex(price);\n      const yTop = this.scales.rowToY(row - 0.5);\n      const yBot = this.scales.rowToY(row + 0.5);\n      const h = Math.max(1, yBot - yTop);\n      const alpha = maxVolume > 0 ? volume / maxVolume : 0;\n      this.ctx.fillStyle = `rgba(255, 255, 0, ${alpha})`;\n      this.ctx.fillRect(this.margin.left, yTop, width - this.margin.left - this.margin.right, h);\n    }\n    this.ctx.restore();\n  }\n}","/**\n * Main chart implementation for the Volume Footprint Chart.\n * Provides the primary API for creating and managing chart instances with modular components.\n */\n\nimport { CandleData, VFCOptions, VFCEvents } from './types';\nimport { Scales } from './scales';\nimport { Interactions } from './interactions';\nimport { Drawing } from './drawing';\n\nexport class Chart {\n    private canvas!: HTMLCanvasElement;\n    private ctx!: CanvasRenderingContext2D;\n    private data: CandleData[] = [];\n    private options!: Required<VFCOptions>;\n   private events: VFCEvents = {};\n\n   // Chart state\n   private margin = { top: 0, bottom: 40, left: 0, right: 70 };\n   private view = { zoomY: 1, zoomX: 1, offsetRows: 0, offsetX: 0, offsetY: 0 };\n   private showGrid = true;\n   private showBounds = false;\n   private showVolumeFootprint = true;\n   private showVolumeHeatmap = false;\n   private crosshair = { x: -1, y: -1, visible: false };\n   private lastPrice: number | null = null;\n\n   // Toolbar button references\n   private resetZoomBtn: HTMLButtonElement | null = null;\n   private toggleGridBtn: HTMLButtonElement | null = null;\n   private toggleVolumeFootprintBtn: HTMLButtonElement | null = null;\n   private volumeHeatmapBtn: HTMLButtonElement | null = null;\n   private measureBtn: HTMLButtonElement | null = null;\n\n   // Constants\n   private readonly TICK = 10;\n   private readonly BASE_CANDLE = 15;\n   private readonly BASE_BOX = 55;\n   private readonly BASE_IMBALANCE = 2;\n   private readonly BASE_SPACING = this.BASE_CANDLE + 2 * this.BASE_BOX + 2 * this.BASE_IMBALANCE;\n   private readonly FIXED_GAP = 4;\n   private readonly baseRowPx = 22;\n   private readonly TEXT_VIS = { minZoomX: 0.5, minRowPx: 10, minBoxPx: 20 };\n\n   // Modules\n   private scales!: Scales;\n   private interactions!: Interactions;\n   private drawing!: Drawing;\n\n  private createChartStructure(container: HTMLElement): void {\n    // Check if toolbars already exist\n    if (container.querySelector('.vfc-toolbar')) {\n      return; // Toolbars already exist, don't recreate\n    }\n\n    // Create the complete chart structure\n    container.classList.add('vfc-container');\n\n    // Create top toolbar\n    const topToolbar = document.createElement('div');\n    topToolbar.className = 'vfc-toolbar';\n\n    const resetZoomBtn = document.createElement('button');\n    resetZoomBtn.id = 'resetZoom';\n    resetZoomBtn.className = 'tool-btn';\n    resetZoomBtn.textContent = 'Reset';\n    topToolbar.appendChild(resetZoomBtn);\n\n    const toggleGridBtn = document.createElement('button');\n    toggleGridBtn.id = 'toggleGrid';\n    toggleGridBtn.className = 'tool-btn';\n    toggleGridBtn.textContent = 'Grid On/Off';\n    topToolbar.appendChild(toggleGridBtn);\n\n\n    const toggleVolumeFootprintBtn = document.createElement('button');\n    toggleVolumeFootprintBtn.id = 'toggleVolumeFootprint';\n    toggleVolumeFootprintBtn.className = 'tool-btn';\n    toggleVolumeFootprintBtn.textContent = 'Volume On/Off';\n    topToolbar.appendChild(toggleVolumeFootprintBtn);\n\n    const volumeHeatmapBtn = document.createElement('button');\n    volumeHeatmapBtn.id = 'volumeHeatmap';\n    volumeHeatmapBtn.className = 'tool-btn';\n    volumeHeatmapBtn.textContent = 'Volume Heatmap';\n    topToolbar.appendChild(volumeHeatmapBtn);\n\n    const measureBtn = document.createElement('button');\n    measureBtn.id = 'measure';\n    measureBtn.className = 'tool-btn';\n    measureBtn.title = 'Measure Tool';\n    measureBtn.textContent = '📐 Measure';\n    topToolbar.appendChild(measureBtn);\n\n    const hint = document.createElement('span');\n    hint.className = 'hint';\n    hint.textContent = 'Volume Footprint Chart';\n    topToolbar.appendChild(hint);\n\n    container.appendChild(topToolbar);\n\n    // Create chart container\n    const chartContainer = document.createElement('div');\n    chartContainer.className = 'vfc-chart-container';\n    container.appendChild(chartContainer);\n\n    // Set up event handlers\n    this.setupToolbarEventHandlers(container);\n  }\n\n  private setupToolbarEventHandlers(container: HTMLElement): void {\n    const resetZoomBtn = container.querySelector('#resetZoom') as HTMLButtonElement;\n    const toggleGridBtn = container.querySelector('#toggleGrid') as HTMLButtonElement;\n    const toggleVolumeFootprintBtn = container.querySelector('#toggleVolumeFootprint') as HTMLButtonElement;\n    const volumeHeatmapBtn = container.querySelector('#volumeHeatmap') as HTMLButtonElement;\n    const measureBtn = container.querySelector('#measure') as HTMLButtonElement;\n\n    // Store references for later use\n    this.resetZoomBtn = resetZoomBtn;\n    this.toggleGridBtn = toggleGridBtn;\n    this.toggleVolumeFootprintBtn = toggleVolumeFootprintBtn;\n    this.volumeHeatmapBtn = volumeHeatmapBtn;\n    this.measureBtn = measureBtn;\n  }\n\n  /**\n   * Initializes the canvas element and context.\n   * @param container The container element\n   * @param chartContainer The chart container element\n   */\n  private initializeCanvas(container: HTMLElement, chartContainer: HTMLElement): void {\n    // Use existing canvas if available, otherwise create one\n    this.canvas = container.querySelector('canvas') as HTMLCanvasElement;\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      if (chartContainer) {\n        chartContainer.appendChild(this.canvas);\n      } else {\n        // Fallback: append directly to container if chart container not found\n        container.appendChild(this.canvas);\n      }\n    }\n\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) throw new Error('Canvas 2D context not available');\n    this.ctx = ctx;\n  }\n\n  /**\n   * Initializes chart options with defaults and user-provided values.\n   * @param options User-provided options\n   * @param container The container element\n   * @param chartContainer The chart container element\n   */\n  private initializeOptions(options: VFCOptions, container: HTMLElement, chartContainer: HTMLElement): void {\n    this.options = {\n      width: options.width || container.clientWidth || 800,\n      height: options.height || (chartContainer ? chartContainer.clientHeight : container.clientHeight) || 600,\n      showGrid: options.showGrid ?? true,\n      showBounds: options.showBounds ?? false,\n      showVolumeFootprint: options.showVolumeFootprint ?? true,\n      showVolumeHeatmap: options.showVolumeHeatmap ?? false,\n      tickSize: options.tickSize || 10,\n      initialZoomX: options.initialZoomX || 0.55,\n      initialZoomY: options.initialZoomY || 0.55,\n      margin: options.margin || this.margin,\n      theme: options.theme || {}\n    };\n\n    this.margin = this.options.margin;\n    this.showGrid = this.options.showGrid;\n    this.showBounds = this.options.showBounds;\n    this.showVolumeFootprint = this.options.showVolumeFootprint;\n    this.showVolumeHeatmap = this.options.showVolumeHeatmap;\n    this.view.zoomX = this.options.initialZoomX;\n    this.view.zoomY = this.options.initialZoomY;\n  }\n\n  /**\n   * Initializes the chart modules (Scales, Interactions, Drawing).\n   */\n  private initializeModules(): void {\n    this.scales = new Scales(\n      this.data,\n      this.margin,\n      this.view,\n      this.options.width,\n      this.options.height,\n      this.showVolumeFootprint,\n      this.TICK,\n      this.baseRowPx,\n      this.TEXT_VIS\n    );\n\n    this.interactions = new Interactions(\n      this.canvas,\n      this.margin,\n      this.view,\n      {\n        ...this.events,\n        onPan: () => this.drawing.drawAll(),\n        onZoom: () => this.drawing.drawAll(),\n        onMouseMove: () => this.drawing.drawAll()\n      },\n      this.crosshair,\n      this.scales\n    );\n\n    this.drawing = new Drawing(\n      this.ctx,\n      this.data,\n      this.margin,\n      this.view,\n      this.showGrid,\n      this.showBounds,\n      this.showVolumeFootprint,\n      this.showVolumeHeatmap,\n      this.scales,\n      this.options.theme,\n      this.crosshair,\n      this.lastPrice,\n      this.interactions\n    );\n  }\n\n  constructor(container: HTMLElement, options: VFCOptions = {}, events: VFCEvents = {}) {\n    // Create the complete chart structure with toolbars\n    this.createChartStructure(container);\n\n    // Get the chart container for accurate dimensions\n    const chartContainer = container.querySelector('.vfc-chart-container') as HTMLElement;\n\n    // Initialize canvas\n    this.initializeCanvas(container, chartContainer);\n\n    // Initialize options\n    this.initializeOptions(options, container, chartContainer);\n\n    // Set events\n    this.events = events;\n\n    // Initialize modules\n    this.initializeModules();\n\n    // Set up canvas and event handlers\n    this.setupCanvas();\n    this.bindEvents();\n    this.bindToolbarEvents();\n    this.layout();\n  }\n\n  private setupCanvas() {\n    const DPR = Math.max(1, Math.round(window.devicePixelRatio || 1));\n    this.canvas.style.width = this.options.width + 'px';\n    this.canvas.style.height = this.options.height + 'px';\n    this.canvas.width = Math.max(1, Math.floor(this.options.width * DPR));\n    this.canvas.height = Math.max(1, Math.floor(this.options.height * DPR));\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.scale(DPR, DPR);\n  }\n\n  private bindEvents() {\n    this.canvas.addEventListener('wheel', this.handleWheel.bind(this), { passive: false });\n    this.canvas.addEventListener('pointerdown', this.handlePointerDown.bind(this));\n    window.addEventListener('resize', this.layout.bind(this));\n  }\n\n  private bindToolbarEvents() {\n    if (this.resetZoomBtn) {\n      this.resetZoomBtn.addEventListener('click', () => {\n        // Reset view to show the end of the data, like initial load\n        if (this.data.length > 0) {\n          this.updateOptions({\n            width: this.options.width,\n            height: this.options.height\n          });\n          // After updating options, set view to show last candles\n          const s = this.scales.scaledSpacing();\n          const contentW = this.options.width - this.margin.left - this.margin.right;\n          const visibleCount = Math.ceil(contentW / s);\n          const startIndex = Math.max(0, this.data.length - visibleCount);\n          this.view.offsetX = startIndex * s;\n          // Center the last candle's close price vertically at canvas center\n          const lastPrice = this.lastPrice!;\n          const centerRow = (this.options.height / 2) / this.scales.rowHeightPx();\n          const priceRow = this.scales.priceToRowIndex(lastPrice); // with current offsetRows=0\n          this.view.offsetRows = centerRow - priceRow;\n          this.drawing.drawAll();\n        }\n      });\n    }\n\n    if (this.toggleGridBtn) {\n      this.toggleGridBtn.addEventListener('click', () => {\n        this.updateOptions({\n          showGrid: !this.options.showGrid\n        });\n      });\n    }\n\n    if (this.toggleVolumeFootprintBtn) {\n      this.toggleVolumeFootprintBtn.addEventListener('click', () => {\n        this.updateOptions({\n          showVolumeFootprint: !this.options.showVolumeFootprint\n        });\n      });\n    }\n\n    if (this.volumeHeatmapBtn) {\n      this.volumeHeatmapBtn.addEventListener('click', () => {\n        this.updateOptions({\n          showVolumeHeatmap: !this.options.showVolumeHeatmap\n        });\n      });\n    }\n\n    if (this.measureBtn) {\n      this.measureBtn.addEventListener('click', () => {\n        const isActive = this.interactions.getMeasureRectangle() !== null;\n        if (isActive) {\n          this.interactions.setMeasureMode(false);\n          this.measureBtn?.classList.remove('active');\n        } else {\n          this.interactions.setMeasureMode(true);\n          this.measureBtn?.classList.add('active');\n        }\n        this.drawing.drawAll();\n      });\n    }\n  }\n\n  private handleWheel(e: WheelEvent) {\n    this.interactions.handleWheel(e);\n    this.drawing.drawAll();\n  }\n\n  private handlePointerDown(e: PointerEvent) {\n    this.interactions.handlePointerDown(e);\n  }\n\n  private layout() {\n    const container = this.canvas.parentElement;\n    if (container) {\n      this.options.width = container.clientWidth || this.options.width;\n      this.options.height = container.clientHeight || this.options.height;\n    }\n\n    // Recreate scales and drawing with new dimensions\n    this.scales = new Scales(\n      this.data,\n      this.margin,\n      this.view,\n      this.options.width,\n      this.options.height,\n      this.showVolumeFootprint,\n      this.TICK,\n      this.baseRowPx,\n      this.TEXT_VIS\n    );\n\n    this.drawing = new Drawing(\n      this.ctx,\n      this.data,\n      this.margin,\n      this.view,\n      this.showGrid,\n      this.showBounds,\n      this.showVolumeFootprint,\n      this.showVolumeHeatmap,\n      this.scales,\n      this.options.theme,\n      this.crosshair,\n      this.lastPrice,\n      this.interactions\n    );\n\n    this.setupCanvas();\n    this.drawing.drawAll();\n  }\n\n  // Public API\n  public setData(data: CandleData[]) {\n    this.data = data;\n\n    // Calculate lastPrice first, before creating Drawing instance\n    if (data.length > 0) {\n        const lastPrice = data[data.length - 1].close;\n        this.lastPrice = lastPrice;\n    }\n\n    // Update scales with new data\n    this.scales = new Scales(\n      this.data,\n      this.margin,\n      this.view,\n      this.options.width,\n      this.options.height,\n      this.showVolumeFootprint,\n      this.TICK,\n      this.baseRowPx,\n      this.TEXT_VIS\n    );\n\n    this.drawing = new Drawing(\n      this.ctx,\n      this.data,\n      this.margin,\n      this.view,\n      this.showGrid,\n      this.showBounds,\n      this.showVolumeFootprint,\n      this.showVolumeHeatmap,\n      this.scales,\n      this.options.theme,\n      this.crosshair,\n      this.lastPrice,  // Now has the correct value\n      this.interactions\n    );\n\n    // Set initial view to show the end of the chart (latest data) and center the last price vertically\n    if (data.length > 0) {\n        const s = this.scales.scaledSpacing();\n        const contentW = this.options.width - this.margin.left - this.margin.right;\n        const visibleCount = Math.ceil(contentW / s);\n        const startIndex = Math.max(0, data.length - visibleCount);\n        this.view.offsetX = startIndex * s;\n        // Center the last candle's close price vertically at canvas center\n        const lastPrice = this.lastPrice!;\n        const centerRow = (this.options.height / 2) / this.scales.rowHeightPx();\n        const priceRow = this.scales.priceToRowIndex(lastPrice); // with current offsetRows=0\n        this.view.offsetRows = centerRow - priceRow;\n    }\n    this.drawing.drawAll();\n  }\n\n  public updateOptions(options: Partial<VFCOptions>) {\n    const oldShowVolumeFootprint = this.showVolumeFootprint;\n    Object.assign(this.options, options);\n    this.showGrid = this.options.showGrid;\n    this.showBounds = this.options.showBounds;\n    this.showVolumeFootprint = this.options.showVolumeFootprint;\n    this.showVolumeHeatmap = this.options.showVolumeHeatmap;\n\n    // If showVolumeFootprint changed, adjust view offsetX to maintain visible range\n    if (oldShowVolumeFootprint !== this.showVolumeFootprint && this.data.length > 0) {\n      const oldSpacing = oldShowVolumeFootprint ? 132 * this.view.zoomX : 16 * this.view.zoomX;\n      const newSpacing = this.showVolumeFootprint ? 132 * this.view.zoomX : 16 * this.view.zoomX;\n      const startIndex = Math.floor(this.view.offsetX / oldSpacing);\n      this.view.offsetX = startIndex * newSpacing;\n    }\n\n    // Recreate Scales first, then Drawing\n    this.scales = new Scales(\n      this.data,\n      this.margin,\n      this.view,\n      this.options.width,\n      this.options.height,\n      this.showVolumeFootprint,\n      this.TICK,\n      this.baseRowPx,\n      this.TEXT_VIS\n    );\n\n    this.drawing = new Drawing(\n      this.ctx,\n      this.data,\n      this.margin,\n      this.view,\n      this.showGrid,\n      this.showBounds,\n      this.showVolumeFootprint,\n      this.showVolumeHeatmap,\n      this.scales,\n      this.options.theme,\n      this.crosshair,\n      this.lastPrice,\n      this.interactions\n    );\n\n    this.layout();\n  }\n\n  public resize(width: number, height: number) {\n    this.options.width = width;\n    this.options.height = height;\n    this.layout();\n  }\n\n  public destroy() {\n    if (this.canvas.parentElement) {\n      this.canvas.parentElement.removeChild(this.canvas);\n    }\n  }\n\n\n  // Getters for API access\n  public getOptions() { return this.options; }\n  public getShowGrid() { return this.showGrid; }\n}","import { ISeriesApi } from './iseries-api';\nimport { IPriceScaleApi } from './iprice-scale-api';\nimport { VolumeFootprintData, VolumeFootprintSeriesOptions } from './ichart-api';\nimport { IChartImplementation } from './ichart-api';\n\nexport class VolumeFootprintSeriesApi implements ISeriesApi<VolumeFootprintData> {\n  private chart: IChartImplementation;\n  private seriesOptions: VolumeFootprintSeriesOptions;\n\n  constructor(chart: IChartImplementation, options?: VolumeFootprintSeriesOptions) {\n    this.chart = chart;\n    this.seriesOptions = options || {};\n  }\n\n  setData(data: VolumeFootprintData[]): void {\n    // Convert data format and set on chart\n    const convertedData = data.map(d => ({\n      time: typeof d.time === 'number' ? new Date(d.time).toISOString() : d.time,\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close,\n      footprint: d.footprint || []\n    }));\n    this.chart.setData(convertedData);\n  }\n\n  update(data: VolumeFootprintData): void {\n    // Update latest data point\n    this.setData([data]);\n  }\n\n  data(): VolumeFootprintData[] {\n    // Return current data (would need to store this)\n    return [];\n  }\n\n  applyOptions(options: VolumeFootprintSeriesOptions): void {\n    this.seriesOptions = { ...this.seriesOptions, ...options };\n  }\n\n  options(): VolumeFootprintSeriesOptions {\n    return this.seriesOptions;\n  }\n\n  priceScale(): IPriceScaleApi {\n    return {\n      applyOptions: () => {},\n      options: () => ({}),\n      width: () => 40,\n      height: () => 0,\n      isEmpty: () => false,\n      priceToCoordinate: () => null,\n      coordinateToPrice: () => null\n    };\n  }\n\n  visible(): boolean {\n    return true;\n  }\n\n  setVisible(visible: boolean): void {\n    // Implement visibility toggle\n  }\n}","import { ITimeScaleApi, TimeScaleOptions, TimeScaleRange } from './itime-scale-api';\nimport { IChartImplementation } from './ichart-api';\n\nexport class TimeScaleApi implements ITimeScaleApi {\n  private chart: IChartImplementation;\n\n  constructor(chart: IChartImplementation) {\n    this.chart = chart;\n  }\n\n  applyOptions(options: TimeScaleOptions): void {\n    // Apply time scale options\n  }\n\n  options(): TimeScaleOptions {\n    return {\n      visible: true,\n      timeVisible: true,\n      barSpacing: 30\n    };\n  }\n\n  scrollToPosition(position: number, animated?: boolean): void {\n    // Scroll to position\n  }\n\n  scrollToRealTime(): void {\n    // Scroll to real time\n  }\n\n  getVisibleRange(): TimeScaleRange | null {\n    return null;\n  }\n\n  setVisibleRange(range: TimeScaleRange): void {\n    // Set visible range\n  }\n\n  resetTimeScale(): void {\n    // Reset time scale\n  }\n\n  fitContent(): void {\n    // Fit content\n  }\n\n  timeToCoordinate(time: string | number): number | null {\n    return null;\n  }\n\n  coordinateToTime(coordinate: number): string | number | null {\n    return null;\n  }\n}","import { IPriceScaleApi, PriceScaleOptions } from './iprice-scale-api';\nimport { IChartImplementation } from './ichart-api';\n\nexport class PriceScaleApi implements IPriceScaleApi {\n  private chart: IChartImplementation;\n\n  constructor(chart: IChartImplementation) {\n    this.chart = chart;\n  }\n\n  applyOptions(options: PriceScaleOptions): void {\n    // Apply price scale options\n  }\n\n  options(): PriceScaleOptions {\n    return {\n      visible: true,\n      autoScale: true\n    };\n  }\n\n  width(): number {\n    return 40;\n  }\n\n  height(): number {\n    return 0; // Would need to calculate actual height\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  priceToCoordinate(price: number): number | null {\n    return null; // Would need to implement coordinate conversion\n  }\n\n  coordinateToPrice(coordinate: number): number | null {\n    return null; // Would need to implement coordinate conversion\n  }\n}","import { IChartApi, IChartImplementation, ChartOptions, VolumeFootprintSeriesOptions, VolumeFootprintData } from './ichart-api';\nimport { ISeriesApi } from './iseries-api';\nimport { ITimeScaleApi } from './itime-scale-api';\nimport { IPriceScaleApi } from './iprice-scale-api';\nimport { Chart as VFC } from '../chart'; // Import the Chart implementation directly\nimport { VolumeFootprintSeriesApi } from './volume-footprint-series-api';\nimport { TimeScaleApi } from './time-scale-api';\nimport { PriceScaleApi } from './price-scale-api';\n\nexport class ChartApi implements IChartApi {\n  private chart: IChartImplementation;\n  private series: ISeriesApi[] = [];\n  private timeScaleApi: TimeScaleApi;\n  private priceScaleApi: PriceScaleApi;\n\n  constructor(container: HTMLElement, options: ChartOptions) {\n    // Convert options to VFC format\n    const vfcOptions = {\n      width: options.width,\n      height: options.height,\n      showGrid: options.grid?.horzLines?.visible ?? true,\n      showBounds: false,\n      tickSize: 10,\n      initialZoomX: 2, // Higher zoom to show footprints\n      initialZoomY: 1,\n      margin: { top: 0, bottom: 40, left: 0, right: 60 }\n    };\n\n    this.chart = new VFC(container, vfcOptions);\n    this.timeScaleApi = new TimeScaleApi(this.chart);\n    this.priceScaleApi = new PriceScaleApi(this.chart);\n  }\n\n  addVolumeFootprintSeries(options?: VolumeFootprintSeriesOptions): ISeriesApi<VolumeFootprintData> {\n    const seriesApi = new VolumeFootprintSeriesApi(this.chart, options);\n    this.series.push(seriesApi);\n    return seriesApi;\n  }\n\n  removeSeries(seriesApi: ISeriesApi<any>): void {\n    const index = this.series.indexOf(seriesApi);\n    if (index > -1) {\n      this.series.splice(index, 1);\n    }\n  }\n\n  timeScale(): ITimeScaleApi {\n    return this.timeScaleApi;\n  }\n\n  priceScale(): IPriceScaleApi {\n    return this.priceScaleApi;\n  }\n\n  applyOptions(options: ChartOptions): void {\n    // Convert and apply options\n    const vfcOptions = {\n      width: options.width,\n      height: options.height,\n      showGrid: options.grid?.horzLines?.visible ?? true\n    };\n    this.chart.updateOptions(vfcOptions);\n  }\n\n  options(): ChartOptions {\n    const opts = this.chart.getOptions();\n    return {\n      width: opts.width,\n      height: opts.height,\n      grid: {\n        horzLines: { visible: this.chart.getShowGrid() }\n      }\n    };\n  }\n\n  resize(width: number, height: number): void {\n    this.chart.resize(width, height);\n  }\n\n  remove(): void {\n    this.chart.destroy();\n  }\n}","import { IChartApi, ChartOptions } from './ichart-api';\nimport { ChartApi } from './chart-api';\n\nexport function createChart(container: HTMLElement, options: ChartOptions): IChartApi {\n  return new ChartApi(container, options);\n}"],"names":["VFC"],"mappings":"AAAA;;;AAGG;AAEH;;;;;;AAMG;AACG,SAAU,wBAAwB,CAAC,OAAe,EAAE,OAAkB,GAAA,IAAI,EAAE,QAAA,GAAmB,IAAI,EAAA;AACvG,IAAA,MAAM,OAAO,GAAG,CAAC,CAAS,KAAK,CAAgB,aAAA,EAAA,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;AACjF,IAAA,MAAM,QAAQ,GAAG,CAAC,CAAS,KAAK,CAAgB,aAAA,EAAA,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;AACnF,IAAA,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;AAC/B,CAAC;AAED;;;;AAIG;AACG,SAAU,YAAY,CAAC,CAAS,EAAA;IACpC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,IAAI,IAAI;AAAE,QAAA,OAAO,CAAC,CAAC,GAAG,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAClD,IAAI,CAAC,IAAI,GAAG;AAAE,QAAA,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAChD,IAAI,CAAC,IAAI,GAAG;AAAE,QAAA,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAChD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClC,CAAC;AAED;;;;AAIG;AACG,SAAU,iBAAiB,CAAC,IAAW,EAAA;;AAC3C,IAAA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAChD,IAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACzC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;YAAE,MAAM,GAAG,CAAC,CAAC;KAClD;IAED,IAAI,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjC,IAAA,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC,IAAI,aAAa,EAAE;AACjB,QAAA,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;AACvC,QAAA,OAAO,GAAG,GAAG,GAAG,GAAG,QAAQ,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;AAC9D,YAAA,MAAM,KAAK,GAAG,EAAE,IAAI,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,YAAA,MAAM,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1D,YAAA,IAAI,KAAK,IAAI,OAAO,EAAE;AACpB,gBAAA,IAAI,EAAE,IAAI,CAAC,EAAE;AAAE,oBAAA,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAAC,oBAAA,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AAAC,oBAAA,EAAE,EAAE,CAAC;iBAAE;qBACzD;AAAE,oBAAA,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAC,oBAAA,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;AAAC,oBAAA,IAAI,EAAE,CAAC;iBAAE;aAC7D;iBAAM;AACL,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;AAAE,oBAAA,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAC,oBAAA,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;AAAC,oBAAA,IAAI,EAAE,CAAC;iBAAE;qBAC1E;AAAE,oBAAA,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAAC,oBAAA,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AAAC,oBAAA,EAAE,EAAE,CAAC;iBAAE;aACvD;SACF;KACF;IAED,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;IACrC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;IACrC,MAAM,GAAG,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC;IAChC,MAAM,GAAG,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC;AAEhC,IAAA,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC;AACxD;;ACpEA;;;AAGG;AAKH;;;AAGG;MACU,MAAM,CAAA;AAWjB;;;;;;;;;;;AAWG;AACH,IAAA,WAAA,CACE,IAAkB,EAClB,MAAoE,EACpE,IAA2E,EAC3E,WAAmB,EACnB,YAAoB,EACpB,mBAA4B,EAC5B,IAAY,EACZ,SAAiB,EACjB,QAAkE,EAAA;QA/B5D,IAAI,CAAA,IAAA,GAAiB,EAAE,CAAC;AAiC9B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC/C,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;IAGD,WAAW,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KACjE;;IAGD,WAAW,GAAA;QACT,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KACzC;;IAGD,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAC7B,YAAA,OAAO,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SACnC;QACD,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAC9B;IAED,YAAY,GAAA;QACV,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAC7B;IAED,SAAS,GAAA;QACP,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAC7B;IAED,SAAS,GAAA;QACP,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAC5B;IAED,kBAAkB,GAAA;QAChB,QACE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ;YACzC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ;YAC5C,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAC1C;KACH;AAED,IAAA,eAAe,CAAC,KAAa,EAAA;AAC3B,QAAA,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KACpE;AAED,IAAA,eAAe,CAAC,GAAW,EAAA;AACzB,QAAA,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC;KAClE;AAED,IAAA,MAAM,CAAC,GAAW,EAAA;AAChB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;KACnD;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;KACjD;IAED,QAAQ,CAAC,CAAS,EAAE,UAAkB,EAAA;AACpC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,UAAU,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;KACtE;IAED,eAAe,GAAA;AACb,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AACtC,QAAA,MAAM,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC;AACnC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AACvD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACzE,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY,CAAC,CAAC;AACvE,QAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;KACjC;IAED,qBAAqB,GAAA;QACnB,MAAM,YAAY,GAAG,EAAE,CAAC;AACxB,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,SAAS,GAAG,CAAC,CAAC;AACpB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,YAAY,CAAC,CAAC,CAAC;QAEhF,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACrC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAClF,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAClC,QAAA,MAAM,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC;QAE/B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAE/E,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC;QACpD,MAAM,GAAG,GAAG,EAAE,CAAC;AACf,QAAA,KAAK,IAAI,KAAK,GAAG,KAAK,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,IAAI,SAAS,EAAE;YAChE,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACjE;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAED,IAAA,OAAO,CAAC,CAAS,EAAA;AACf,QAAA,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;KACxB;AAED,IAAA,IAAY,MAAM,GAAA;AAChB,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AACtC,QAAA,MAAM,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC;AACnC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AACvD,QAAA,MAAM,KAAK,GAAG,WAAW,GAAG,UAAU,GAAG,CAAC,CAAC;AAC3C,QAAA,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC;KACtC;AAED,IAAA,kBAAkB,CAAC,OAAe,EAAA;AAChC,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAClC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/B,QAAA,MAAM,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACnE,QAAA,OAAO,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;KAClD;;AAGD,IAAA,uBAAuB,CAAC,OAAe,EAAA;AACrC,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAClC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/B,QAAA,MAAM,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACnE,QAAA,OAAO,EAAE,CAAC,UAAU,GAAG,SAAS,GAAG,CAAC,CAAC;KACtC;AAED,IAAA,cAAc,CAAC,OAAe,EAAA;;QAE5B,OAAO,IAAI,CAAC,eAAe,CACzB,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CACxE,CAAC;KACH;AAED,IAAA,IAAY,SAAS,GAAA;AACnB,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;AAAE,YAAA,OAAO,KAAK,CAAC;AACzC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;KACpG;AACF;;AC5LD;;;AAGG;AAKH;;;AAGG;MACU,YAAY,CAAA;AAevB;;;;;;;;AAQG;IACH,WACE,CAAA,MAAyB,EACzB,MAAoE,EACpE,IAA2E,EAC3E,MAAiB,EACjB,SAAqD,EACrD,MAAc,EAAA;AAxBR,QAAA,IAAA,CAAA,QAAQ,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QAC9C,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;;QAK5C,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;QACtB,IAAgB,CAAA,gBAAA,GAA4B,IAAI,CAAC;AAmBvD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;AAED;;;;AAIG;AACH,IAAA,WAAW,CAAC,CAAa,EAAA;;QACvB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QACjD,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;AAChC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAE7E,QAAA,MAAM,YAAY,GAAG,EAAE,GAAG,UAAU,CAAC;AACrC,QAAA,MAAM,YAAY,GAAG,EAAE,GAAG,OAAO,CAAC;AAClC,QAAA,MAAM,aAAa,GAAG,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC;QAErD,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9D,YAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,EAAC,MAAM,mDAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,aAAa,EAAE;AACxB,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC7B,YAAA,MAAM,MAAM,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1C,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACvB,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;YAE9D,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AACnC,YAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,EAAC,MAAM,mDAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,YAAY,EAAE;;AAEvB,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC7B,YAAA,MAAM,MAAM,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1C,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AACnC,YAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,EAAC,MAAM,mDAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;KACF;AAED,IAAA,iBAAiB,CAAC,CAAe,EAAA;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QACjD,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;;AAG/B,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACvC,OAAO;SACR;;QAGD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;AAC3C,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;AACtB,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;AAEtB,QAAA,IAAI,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AAE9B,QAAA,MAAM,MAAM,GAAG,CAAC,EAAgB,KAAI;;AAClC,YAAA,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AAC9B,YAAA,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;AACpC,YAAA,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,GAAG,KAAK,CAAC;AAC9B,YAAA,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,GAAG,KAAK,CAAC;AAC9B,YAAA,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC;AACnB,YAAA,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC;YACnB,KAAK,GAAG,GAAG,CAAC;;YAGZ,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACpD,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChF,YAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AAC3C,YAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,EAAC,KAAK,mDAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7D,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC/B,SAAC,CAAC;QAEF,MAAM,IAAI,GAAG,MAAK;YAChB,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;AAEzD,SAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KACrD;AAGO,IAAA,wBAAwB,CAAC,CAAe,EAAE,CAAS,EAAE,CAAS,EAAA;;AAEpE,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAClE,MAAM,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAElD,QAAA,MAAM,aAAa,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,UAAU;YACxC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,OAAO,CAAC;AAE3D,QAAA,IAAI,CAAC,aAAa;YAAE,OAAO;QAE3B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;;QAG3C,IAAI,CAAC,gBAAgB,GAAG;AACtB,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AAEF,QAAA,MAAM,MAAM,GAAG,CAAC,EAAgB,KAAI;;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;YACjD,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YACxC,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;;AAGvC,YAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,QAAQ,CAAC;AACtC,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,QAAQ,CAAC;aACvC;;AAGD,YAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,EAAC,WAAW,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AACtD,SAAC,CAAC;QAEF,MAAM,IAAI,GAAG,MAAK;YAChB,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;AACzD,SAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KACrD;;AAOD,IAAA,cAAc,CAAC,OAAgB,EAAA;AAC7B,QAAA,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;KACF;IAED,mBAAmB,GAAA;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;IAEO,cAAc,GAAA;AACpB,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;AACrB,YAAA,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACxC,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;SACvB;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;KAC9B;AAEO,IAAA,aAAa,CAAC,EAAU,EAAA;AAC9B,QAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;AACtB,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACzE;KACF;AAEO,IAAA,YAAY,CAAC,EAAU,EAAA;AAC7B,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AACzB,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;YACtB,OAAO;SACR;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;AAAE,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;QACrD,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACrC,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;AAC3C,QAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC;AACzB,QAAA,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE;YACtC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAEO,kBAAkB,GAAA;AACxB,QAAA,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3E,QAAA,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC9E;AAEO,IAAA,eAAe,CAAC,CAAa,EAAA;;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QACjD,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;;AAG/B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAClE,MAAM,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAElD,QAAA,MAAM,aAAa,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,UAAU;YACzC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,OAAO,CAAC;QAE1D,IAAI,aAAa,EAAE;AACjB,YAAA,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,YAAA,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,YAAA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;SAC/B;aAAM;AACL,YAAA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;SAChC;;AAGD,QAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,EAAC,WAAW,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KACzD;IAEO,gBAAgB,GAAA;;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;AAC/B,QAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,EAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KAC1C;AACF;;ACzRD;;;AAGG;AAMH;;AAEG;SACa,kBAAkB,CAChC,GAA6B,EAC7B,IAAW,EACX,MAAc,EACd,aAAsB,EACtB,KAAa,EACb,MAAc,EACd,MAAc,EACd,KAAU,EAAA;;AAEV,IAAA,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,MAAM,OAAO,GAAG,CAAA,EAAA,GAAA,KAAK,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;IAC5C,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,KAAK,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;AAC9C,IAAA,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,wBAAwB,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IAEnF,IAAI,MAAM,GAAG,QAAQ,EAAE,MAAM,GAAG,CAAC,QAAQ,CAAC;AAC1C,IAAA,IAAI,MAAM,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC;AAE5B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACtC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;QACnC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;QACrC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,QAAA,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC;AAChB,QAAA,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC;QAElB,MAAM,KAAK,GAAG,aAAa,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC;QAC9C,GAAG,CAAC,SAAS,GAAG,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACzE,QAAA,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;QACjD,GAAG,CAAC,SAAS,GAAG,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACvE,QAAA,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;KACnD;IAED,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC;AAC7C,CAAC;AAED;;AAEG;AACa,SAAA,oBAAoB,CAClC,GAA6B,EAC7B,IAAW,EACX,KAAa,EACb,MAAc,EACd,MAAc,EACd,KAAU,EAAA;AAEV,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,MAAM,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACtC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;AACnC,QAAA,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;YAC/C,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,aAAa,IAAI,SAAS,CAAC;YACjD,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;SAC3E;AACD,QAAA,IAAI,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAC/C,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,IAAI,SAAS,CAAC;YAChD,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;SAC5E;KACF;AACH,CAAC;AAED;;AAEG;SACa,iBAAiB,CAC/B,GAA6B,EAC7B,IAAW,EACX,MAAc,EACd,aAAsB,EACtB,KAAa,EACb,MAAc,EACd,MAAc,EACd,KAAU,EACV,KAAa,EAAA;AAEb,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;AACvD,IAAA,GAAG,CAAC,IAAI,GAAG,CAAG,EAAA,QAAQ,cAAc,CAAC;AACrC,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;AAC5B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,aAAa,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC;AAC9C,QAAA,GAAG,CAAC,SAAS,GAAG,KAAK,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,eAAe,IAAI,SAAS,KAAK,KAAK,CAAC,eAAe,IAAI,MAAM,CAAC,CAAC;QACvH,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;KACzE;AACH,CAAC;AAED;;AAEG;AACG,SAAU,uBAAuB,CACrC,GAA6B,EAC7B,EAAU,EACV,IAAY,EACZ,GAAW,EACX,GAAW,EACX,KAAa,EACb,MAAc,EACd,MAAc,EACd,KAAU,EACV,KAAa,EAAA;AAEb,IAAA,MAAM,IAAI,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC7E,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;IACvC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;IACvC,MAAM,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;IAE9C,GAAG,CAAC,IAAI,EAAE,CAAC;IACX,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,SAAS,CAAC;IACjD,GAAG,CAAC,SAAS,EAAE,CAAC;AAChB,IAAA,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxB,IAAA,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC5B,GAAG,CAAC,MAAM,EAAE,CAAC;IACb,GAAG,CAAC,SAAS,EAAE,CAAC;AAChB,IAAA,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxB,IAAA,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC5B,GAAG,CAAC,MAAM,EAAE,CAAC;AACb,IAAA,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAEpB,IAAA,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACzD,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,gBAAgB,IAAI,SAAS,CAAC;AACpD,IAAA,GAAG,CAAC,IAAI,GAAG,CAAG,EAAA,WAAW,cAAc,CAAC;AACxC,IAAA,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;AACvB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;AAC5B,IAAA,MAAM,MAAM,GAAG,EAAE,GAAG,IAAI,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAClD,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAClC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAClC,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB,CAAC;AAED;;AAEG;SACa,oBAAoB,CAClC,GAA6B,EAC7B,EAAU,EACV,MAAc,EACd,MAAc,EACd,OAAe,EACf,QAAgB,EAChB,MAAc,EACd,KAAU,EACV,KAAa,EAAA;IAEb,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAChD,IAAA,MAAM,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC;AAC/B,IAAA,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;AAC5D,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,IAAI,GAAG,CAAG,EAAA,aAAa,cAAc,CAAC;IAC1C,GAAG,CAAC,SAAS,GAAG,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,aAAa,IAAI,SAAS,KAAK,KAAK,CAAC,aAAa,IAAI,SAAS,CAAC,CAAC;AACrG,IAAA,GAAG,CAAC,QAAQ,CAAC,SAAS,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,CAAE,EAAE,EAAE,EAAE,aAAa,GAAG,EAAE,CAAC,CAAC;IACvE,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,UAAU,IAAI,MAAM,CAAC;AAC3C,IAAA,GAAG,CAAC,QAAQ,CAAC,SAAS,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA,CAAE,EAAE,EAAE,EAAE,aAAa,GAAG,EAAE,CAAC,CAAC;AAC5E,CAAC;AAED;;AAEG;AACa,SAAA,qBAAqB,CACnC,GAA6B,EAC7B,EAAU,EACV,IAAY,EACZ,MAAkB,EAClB,MAAc,EACd,KAAU,EAAA;IAEV,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzC,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7C,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC;IACzC,MAAM,KAAK,GAAG,IAAI,IAAI,KAAK,CAAC,UAAU,IAAI,SAAS,KAAK,KAAK,CAAC,UAAU,IAAI,SAAS,CAAC,CAAC;AACvF,IAAA,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;IACxB,GAAG,CAAC,SAAS,EAAE,CAAC;AAChB,IAAA,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtB,IAAA,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACrB,GAAG,CAAC,MAAM,EAAE,CAAC;AACb,IAAA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;AACtB,IAAA,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;AACpG,CAAC;AAED;;AAEG;SACa,aAAa,CAC3B,GAA6B,EAC7B,MAAkB,EAClB,CAAS,EACT,UAAkB,EAClB,MAAc,EACd,KAAU,EACV,IAAS,EACT,mBAA4B,EAAA;IAE5B,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IAC1C,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAEvC,IAAI,mBAAmB,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;AACxE,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAEtC,QAAA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAE/E,MAAM,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAC7C,QAAA,MAAM,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;;AAGzB,QAAA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,kBAAkB,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;AAG/H,QAAA,oBAAoB,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;AAG9D,QAAA,IAAI,MAAM,CAAC,kBAAkB,EAAE,EAAE;YAC/B,iBAAiB,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/F;;AAGD,QAAA,IAAI,aAAa,IAAI,MAAM,CAAC,kBAAkB,EAAE,EAAE;YAChD,uBAAuB,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5F;;AAGD,QAAA,IAAI,MAAM,CAAC,kBAAkB,EAAE,EAAE;YAC/B,oBAAoB,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7F;KACF;;AAGD,IAAA,qBAAqB,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9D;;AC9PA;;;AAGG;AAIH;;AAEG;AACa,SAAA,YAAY,CAC1B,GAA6B,EAC7B,KAAa,EACb,MAAc,EACd,MAAW,EACX,MAAc,EACd,KAAU,EAAA;AAEV,IAAA,MAAM,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACnC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,IAAI,MAAM,CAAC;AAChD,IAAA,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,MAAM,CAAC;IAC9C,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;;IAGlF,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC1C,IAAA,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC5B,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;AAC5B,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;IAC9C,KAAK,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE;QACjC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;KAClE;AACH,CAAC;AAED;;AAEG;AACa,SAAA,YAAY,CAC1B,GAA6B,EAC7B,KAAa,EACb,MAAc,EACd,MAAW,EACX,MAAc,EACd,IAAW,EACX,KAAU,EAAA;AAEV,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACnE,MAAM,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC;IAClD,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,IAAI,MAAM,CAAC;AAChD,IAAA,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,MAAM,CAAC;IAC9C,GAAG,CAAC,SAAS,EAAE,CAAC;IAChB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC;AACvC,IAAA,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC;IAChD,GAAG,CAAC,MAAM,EAAE,CAAC;;IAGb,GAAG,CAAC,IAAI,EAAE,CAAC;IACX,GAAG,CAAC,SAAS,EAAE,CAAC;AAChB,IAAA,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IACtD,GAAG,CAAC,IAAI,EAAE,CAAC;IACX,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC1C,IAAA,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC5B,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACnE,IAAA,MAAM,EAAE,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;;AAEpC,IAAA,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;IACtD,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrC,IAAA,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,IAAI,IAAI,EAAE;AACtD,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AAC5C,QAAA,IAAI,IAAU,CAAC;QACf,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;YAC9B,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC/B;aAAM;;AAEL,YAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,gBAAA,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;AAChE,gBAAA,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;AAChE,gBAAA,MAAM,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACrC,gBAAA,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC;aAC9D;iBAAM;;gBAEL,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;AAC9B,oBAAA,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;oBAC9C,IAAI,CAAC,GAAG,EAAE,CAAC;gBACb,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;aACxE;SACF;AACD,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1D,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9D,QAAA,MAAM,CAAC,GAAG,CAAA,EAAG,KAAK,CAAI,CAAA,EAAA,OAAO,EAAE,CAAC;AAChC,QAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACjD;IACD,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB,CAAC;AAED;;AAEG;AACa,SAAA,UAAU,CACxB,GAA6B,EAC7B,KAAa,EACb,MAAc,EACd,MAAW,EACX,MAAc,EACd,IAAW,EACX,KAAU,EAAA;AAEV,IAAA,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACxD,IAAA,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAChE;;ACjHA;;;AAGG;AAIH;;AAEG;AACG,SAAU,QAAQ,CACtB,GAA6B,EAC7B,KAAa,EACb,MAAW,EACX,MAAc,EACd,KAAU,EAAA;AAEV,IAAA,MAAM,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACxC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC5C,IAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC,CAAC;IAChE,GAAG,CAAC,SAAS,EAAE,CAAC;AAChB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE;QAClC,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC;QACvC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3B,QAAA,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;KAC3B;IACD,GAAG,CAAC,MAAM,EAAE,CAAC;AAEb,IAAA,MAAM,EAAE,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;IACpC,GAAG,CAAC,SAAS,EAAE,CAAC;AAChB,IAAA,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;AAChD,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QACzE,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AAC1B,QAAA,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;KAClD;IACD,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,cAAc,IAAI,SAAS,CAAC;IACpD,GAAG,CAAC,MAAM,EAAE,CAAC;AACf,CAAC;AAED;;AAEG;AACG,SAAU,UAAU,CACxB,GAA6B,EAC7B,KAAa,EACb,MAAc,EACd,MAAW,EACX,MAAc,EAAA;IAEd,MAAM,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC;AAClD,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AACpC,IAAA,MAAM,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACpC,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;IAEpC,GAAG,CAAC,IAAI,EAAE,CAAC;;AAEX,IAAA,GAAG,CAAC,SAAS,GAAG,yBAAyB,CAAC;;AAE1C,IAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;;AAEtC,IAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;;;IAKjD,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxB,IAAA,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;AAC5B,IAAA,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC;AACpB,IAAA,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;AAGpE,IAAA,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;;AAE5B,IAAA,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;;IAEhE,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,EAAE,OAAO,GAAG,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC5E,IAAA,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpB,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB;;AChFA;;;AAGG;AAIH;;AAEG;SACa,aAAa,CAC3B,GAA6B,EAC7B,KAAa,EACb,MAAc,EACd,MAAW,EACX,SAAqD,EACrD,MAAc,EACd,IAAW,EACX,KAAU,EAAA;IAEV,IAAI,CAAC,SAAS,CAAC,OAAO;QAAE,OAAO;AAE/B,IAAA,MAAM,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACxC,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAEnE,GAAG,CAAC,IAAI,EAAE,CAAC;;IAGX,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC5C,IAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,SAAS,EAAE,CAAC;IAChB,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;IACpC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACjC,GAAG,CAAC,MAAM,EAAE,CAAC;;IAGb,GAAG,CAAC,SAAS,EAAE,CAAC;IAChB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACrC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACpC,GAAG,CAAC,MAAM,EAAE,CAAC;;IAGb,MAAM,KAAK,GAAG,MAAM,CAAC,eAAe,CAClC,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,CAClD,CAAC;AACF,IAAA,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,IAAI,MAAM,CAAC;AAChD,IAAA,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC5D,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,MAAM,CAAC;AAC9C,IAAA,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC9D,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC1C,IAAA,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC;AACjC,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC5B,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;;IAGhF,MAAM,KAAK,GAAG,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACrD,IAAI,OAAO,GAAG,OAAO,CAAC;AACtB,IAAA,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AACpD,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;AACxC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1D,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9D,QAAA,OAAO,GAAG,CAAG,EAAA,KAAK,CAAI,CAAA,EAAA,OAAO,EAAE,CAAC;KACjC;IAED,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,IAAI,MAAM,CAAC;AAChD,IAAA,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC3D,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,MAAM,CAAC;AAC9C,IAAA,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7D,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC1C,IAAA,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC5B,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;AAC5B,IAAA,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAEhE,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB,CAAC;AAED;;AAEG;AACa,SAAA,qBAAqB,CACnC,GAA6B,EAC7B,KAAa,EACb,SAAwB,EACxB,MAAW,EACX,MAAc,EACd,KAAU,EAAA;AAEV,IAAA,IAAI,CAAC,SAAS;QAAE,OAAO;AAEvB,IAAA,MAAM,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACnC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAErC,GAAG,CAAC,IAAI,EAAE,CAAC;;IAGX,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;AAC5C,IAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,SAAS,EAAE,CAAC;IAChB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3B,IAAA,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrB,GAAG,CAAC,MAAM,EAAE,CAAC;AACb,IAAA,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;IAGpB,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC5C,IAAA,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC;IACjC,MAAM,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC;IAC/B,MAAM,SAAS,GAAG,EAAE,CAAC;;AAGrB,IAAA,MAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;AACvB,IAAA,MAAM,IAAI,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;;AAG/B,IAAA,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;IAC1B,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;;AAG9C,IAAA,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;AAC5B,IAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;;AAGhD,IAAA,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAC1B,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;AAC5B,IAAA,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,QAAQ,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;IAEnE,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB;;ACvIA;;;AAGG;AAKH;;AAEG;AACG,SAAU,oBAAoB,CAClC,GAA6B,EAC7B,gBAAyC,EACzC,MAAc,EACd,KAAU,EAAA;AAEV,IAAA,IAAI,CAAC,gBAAgB;QAAE,OAAO;IAE9B,GAAG,CAAC,IAAI,EAAE,CAAC;;AAGX,IAAA,MAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC;AACvC,IAAA,MAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC;AACvC,IAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC;AACnC,IAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC;;IAGnC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;IAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;;IAG3C,MAAM,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACjD,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IACrD,MAAM,QAAQ,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAEjD,IAAA,MAAM,SAAS,GAAG,QAAQ,GAAG,UAAU,CAAC;AACxC,IAAA,MAAM,QAAQ,GAAG,QAAQ,GAAG,UAAU,CAAC;AACvC,IAAA,MAAM,UAAU,GAAG,SAAS,IAAI,CAAC,CAAC;;AAGlC,IAAA,MAAM,SAAS,GAAG,UAAU,GAAG,wBAAwB,GAAG,wBAAwB,CAAC;AACnF,IAAA,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;IAC1B,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;;IAGlD,MAAM,WAAW,GAAG,UAAU,GAAG,wBAAwB,GAAG,wBAAwB,CAAC;AACrF,IAAA,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;AAC9B,IAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;;AAGpD,IAAA,MAAM,OAAO,GAAG,KAAK,GAAG,SAAS,GAAG,CAAC,CAAC;;AAGtC,IAAA,MAAM,aAAa,GAAG,UAAU,KAAK,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,IAAI,GAAG,GAAG,CAAC,CAAC;;AAG5E,IAAA,MAAM,SAAS,GAAG,SAAS,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAC5C,IAAA,MAAM,SAAS,GAAG,CAAG,EAAA,SAAS,CAAG,EAAA,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,aAAa,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAA,EAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;IACvH,MAAM,cAAc,GAAG,CAAA,OAAA,EAAU,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;IACzD,MAAM,YAAY,GAAG,CAAA,KAAA,EAAQ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAC1C,IAAA,MAAM,QAAQ,GAAG,CAAA,IAAA,EAAO,QAAQ,CAAG,EAAA,QAAQ,OAAO,CAAC;IAEnD,MAAM,KAAK,GAAG,CAAC,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;;AAGlE,IAAA,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;IAC5B,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,MAAM,OAAO,GAAG,CAAC,CAAC;IAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7E,IAAA,MAAM,QAAQ,GAAG,QAAQ,GAAG,OAAO,GAAG,CAAC,CAAC;IACxC,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,OAAO,GAAG,CAAC,CAAC;AAC1D,IAAA,MAAM,IAAI,GAAG,OAAO,GAAG,QAAQ,GAAG,CAAC,CAAC;AACpC,IAAA,MAAM,IAAI,GAAG,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;;AAGpC,IAAA,MAAM,QAAQ,GAAG,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC;IACpD,MAAM,SAAS,GAAG,SAAS,CAAC;;AAG5B,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;IACzB,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;;AAG9C,IAAA,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;AAC5B,IAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;;AAGhD,IAAA,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAC1B,IAAA,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACzB,IAAA,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC;IACzB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;QAC5B,MAAM,CAAC,GAAG,IAAI,GAAG,OAAO,GAAG,KAAK,GAAG,UAAU,CAAC;QAC9C,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACjC,KAAC,CAAC,CAAC;IAEH,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB;;AC/FA;;;AAGG;MAEU,OAAO,CAAA;IAelB,WACE,CAAA,GAA6B,EAC7B,IAAkB,EAClB,MAAoE,EACpE,IAA2E,EAC3E,QAAiB,EACjB,UAAmB,EACnB,mBAA4B,EAC5B,iBAA0B,EAC1B,MAAc,EACd,KAAe,EACf,SAAqD,EACrD,SAAwB,EACxB,YAAiB,EAAA;AAEjB,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC/C,QAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC3C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAED,OAAO,GAAA;AACL,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAC9D,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAChE,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,QAAQ;AAAE,YAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnF,IAAI,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACrD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACjG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrF,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7F,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO;AAAE,YAAA,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACpI,IAAI,IAAI,CAAC,UAAU;AAAE,YAAA,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACpF;IAEO,SAAS,GAAA;AACf,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AAChB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAC9D,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CACX,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,MAAM,CAAC,GAAG,EACf,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAC5C,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAC1B,CAAC;AACF,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEhB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;AACzC,QAAA,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;AAChD,YAAA,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACvH;AACD,QAAA,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;KACpB;IAEO,iBAAiB,GAAA;QACvB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;AACzC,QAAA,IAAI,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,UAAU;YAAE,OAAO;;AAGzC,QAAA,MAAM,SAAS,GAAG,IAAI,GAAG,EAAkB,CAAC;AAC5C,QAAA,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;YAChD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,YAAA,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,SAAS,EAAE;gBACpC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;gBACxC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC;aAC1E;SACF;AAED,QAAA,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC;YAAE,OAAO;;AAGjC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;;AAGlD,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AAChB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAC9D,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CACX,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,MAAM,CAAC,GAAG,EACf,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAC5C,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAC1B,CAAC;AACF,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEhB,KAAK,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,SAAS,EAAE;YACvC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC/C,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3C,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3C,YAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;AACnC,YAAA,MAAM,KAAK,GAAG,SAAS,GAAG,CAAC,GAAG,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAqB,kBAAA,EAAA,KAAK,GAAG,CAAC;AACnD,YAAA,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5F;AACD,QAAA,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;KACpB;AACF;;ACrID;;;AAGG;MAOU,KAAK,CAAA;AAuCR,IAAA,oBAAoB,CAAC,SAAsB,EAAA;;AAEjD,QAAA,IAAI,SAAS,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE;AAC3C,YAAA,OAAO;SACR;;AAGD,QAAA,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;;QAGzC,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACjD,QAAA,UAAU,CAAC,SAAS,GAAG,aAAa,CAAC;QAErC,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACtD,QAAA,YAAY,CAAC,EAAE,GAAG,WAAW,CAAC;AAC9B,QAAA,YAAY,CAAC,SAAS,GAAG,UAAU,CAAC;AACpC,QAAA,YAAY,CAAC,WAAW,GAAG,OAAO,CAAC;AACnC,QAAA,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAErC,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvD,QAAA,aAAa,CAAC,EAAE,GAAG,YAAY,CAAC;AAChC,QAAA,aAAa,CAAC,SAAS,GAAG,UAAU,CAAC;AACrC,QAAA,aAAa,CAAC,WAAW,GAAG,aAAa,CAAC;AAC1C,QAAA,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAGtC,MAAM,wBAAwB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAClE,QAAA,wBAAwB,CAAC,EAAE,GAAG,uBAAuB,CAAC;AACtD,QAAA,wBAAwB,CAAC,SAAS,GAAG,UAAU,CAAC;AAChD,QAAA,wBAAwB,CAAC,WAAW,GAAG,eAAe,CAAC;AACvD,QAAA,UAAU,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;QAEjD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC1D,QAAA,gBAAgB,CAAC,EAAE,GAAG,eAAe,CAAC;AACtC,QAAA,gBAAgB,CAAC,SAAS,GAAG,UAAU,CAAC;AACxC,QAAA,gBAAgB,CAAC,WAAW,GAAG,gBAAgB,CAAC;AAChD,QAAA,UAAU,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAEzC,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpD,QAAA,UAAU,CAAC,EAAE,GAAG,SAAS,CAAC;AAC1B,QAAA,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC;AAClC,QAAA,UAAU,CAAC,KAAK,GAAG,cAAc,CAAC;AAClC,QAAA,UAAU,CAAC,WAAW,GAAG,YAAY,CAAC;AACtC,QAAA,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAEnC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;AACxB,QAAA,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;AAC5C,QAAA,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAE7B,QAAA,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;QAGlC,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACrD,QAAA,cAAc,CAAC,SAAS,GAAG,qBAAqB,CAAC;AACjD,QAAA,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;;AAGtC,QAAA,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;KAC3C;AAEO,IAAA,yBAAyB,CAAC,SAAsB,EAAA;QACtD,MAAM,YAAY,GAAG,SAAS,CAAC,aAAa,CAAC,YAAY,CAAsB,CAAC;QAChF,MAAM,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC,aAAa,CAAsB,CAAC;QAClF,MAAM,wBAAwB,GAAG,SAAS,CAAC,aAAa,CAAC,wBAAwB,CAAsB,CAAC;QACxG,MAAM,gBAAgB,GAAG,SAAS,CAAC,aAAa,CAAC,gBAAgB,CAAsB,CAAC;QACxF,MAAM,UAAU,GAAG,SAAS,CAAC,aAAa,CAAC,UAAU,CAAsB,CAAC;;AAG5E,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;AACzD,QAAA,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACzC,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;AAED;;;;AAIG;IACK,gBAAgB,CAAC,SAAsB,EAAE,cAA2B,EAAA;;QAE1E,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAsB,CAAC;AACrE,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,cAAc,EAAE;AAClB,gBAAA,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACzC;iBAAM;;AAEL,gBAAA,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;SACF;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,GAAG;AAAE,YAAA,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;AAC7D,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;AAED;;;;;AAKG;AACK,IAAA,iBAAiB,CAAC,OAAmB,EAAE,SAAsB,EAAE,cAA2B,EAAA;;QAChG,IAAI,CAAC,OAAO,GAAG;YACb,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,SAAS,CAAC,WAAW,IAAI,GAAG;YACpD,MAAM,EAAE,OAAO,CAAC,MAAM,KAAK,cAAc,GAAG,cAAc,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,IAAI,GAAG;AACxG,YAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,QAAQ,mCAAI,IAAI;AAClC,YAAA,UAAU,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,UAAU,mCAAI,KAAK;AACvC,YAAA,mBAAmB,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,mBAAmB,mCAAI,IAAI;AACxD,YAAA,iBAAiB,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,iBAAiB,mCAAI,KAAK;AACrD,YAAA,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE;AAChC,YAAA,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,IAAI;AAC1C,YAAA,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,IAAI;AAC1C,YAAA,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;AACrC,YAAA,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;SAC3B,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;KAC7C;AAED;;AAEG;IACK,iBAAiB,GAAA;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,CACd,CAAC;AAEF,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT;YACE,GAAG,IAAI,CAAC,MAAM;YACd,KAAK,EAAE,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACnC,MAAM,EAAE,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACpC,WAAW,EAAE,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;SAC1C,EACD,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,MAAM,CACZ,CAAC;AAEF,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CACxB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,CAClB,CAAC;KACH;AAED,IAAA,WAAA,CAAY,SAAsB,EAAE,OAAA,GAAsB,EAAE,EAAE,SAAoB,EAAE,EAAA;QApN1E,IAAI,CAAA,IAAA,GAAiB,EAAE,CAAC;QAEzB,IAAM,CAAA,MAAA,GAAc,EAAE,CAAC;;AAGvB,QAAA,IAAA,CAAA,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACpD,IAAI,CAAA,IAAA,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;QACrE,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QACnB,IAAmB,CAAA,mBAAA,GAAG,IAAI,CAAC;QAC3B,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;AAC1B,QAAA,IAAA,CAAA,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QAC7C,IAAS,CAAA,SAAA,GAAkB,IAAI,CAAC;;QAGhC,IAAY,CAAA,YAAA,GAA6B,IAAI,CAAC;QAC9C,IAAa,CAAA,aAAA,GAA6B,IAAI,CAAC;QAC/C,IAAwB,CAAA,wBAAA,GAA6B,IAAI,CAAC;QAC1D,IAAgB,CAAA,gBAAA,GAA6B,IAAI,CAAC;QAClD,IAAU,CAAA,UAAA,GAA6B,IAAI,CAAC;;QAGnC,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;QACV,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QACjB,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;QACd,IAAc,CAAA,cAAA,GAAG,CAAC,CAAC;AACnB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC9E,IAAS,CAAA,SAAA,GAAG,CAAC,CAAC;QACd,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;AACf,QAAA,IAAA,CAAA,QAAQ,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;;AAyLzE,QAAA,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;;QAGrC,MAAM,cAAc,GAAG,SAAS,CAAC,aAAa,CAAC,sBAAsB,CAAgB,CAAC;;AAGtF,QAAA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;;QAGjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;;AAG3D,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;QAGrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAGzB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAEO,WAAW,GAAA;AACjB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC;AAClE,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;AACpD,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC1B;IAEO,UAAU,GAAA;QAChB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AACvF,QAAA,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/E,QAAA,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3D;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;;gBAE/C,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACxB,IAAI,CAAC,aAAa,CAAC;AACjB,wBAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;AACzB,wBAAA,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;AAC5B,qBAAA,CAAC,CAAC;;oBAEH,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;AACtC,oBAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC3E,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC7C,oBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;oBAChE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,CAAC,CAAC;;AAEnC,oBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAU,CAAC;AAClC,oBAAA,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;AACxE,oBAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBACxD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,QAAQ,CAAC;AAC5C,oBAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;iBACxB;AACH,aAAC,CAAC,CAAC;SACJ;AAED,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;gBAChD,IAAI,CAAC,aAAa,CAAC;AACjB,oBAAA,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ;AACjC,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;SACJ;AAED,QAAA,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;gBAC3D,IAAI,CAAC,aAAa,CAAC;AACjB,oBAAA,mBAAmB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB;AACvD,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;SACJ;AAED,QAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;gBACnD,IAAI,CAAC,aAAa,CAAC;AACjB,oBAAA,iBAAiB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB;AACnD,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;SACJ;AAED,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAK;;gBAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,KAAK,IAAI,CAAC;gBAClE,IAAI,QAAQ,EAAE;AACZ,oBAAA,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBACxC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAC7C;qBAAM;AACL,oBAAA,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBACvC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAC1C;AACD,gBAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AACzB,aAAC,CAAC,CAAC;SACJ;KACF;AAEO,IAAA,WAAW,CAAC,CAAa,EAAA;AAC/B,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KACxB;AAEO,IAAA,iBAAiB,CAAC,CAAe,EAAA;AACvC,QAAA,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;KACxC;IAEO,MAAM,GAAA;AACZ,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QAC5C,IAAI,SAAS,EAAE;AACb,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AACjE,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACrE;;QAGD,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,CACd,CAAC;AAEF,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CACxB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,CAClB,CAAC;QAEF,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KACxB;;AAGM,IAAA,OAAO,CAAC,IAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAGjB,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;AAC9C,YAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B;;QAGD,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,CACd,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CACxB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,YAAY,CAClB,CAAC;;AAGF,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;AACtC,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAC3E,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC7C,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,CAAC,CAAC;;AAEnC,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAU,CAAC;AAClC,YAAA,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;AACxE,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,QAAQ,CAAC;SAC/C;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KACxB;AAEM,IAAA,aAAa,CAAC,OAA4B,EAAA;AAC/C,QAAA,MAAM,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;;AAGxD,QAAA,IAAI,sBAAsB,KAAK,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/E,MAAM,UAAU,GAAG,sBAAsB,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACzF,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3F,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC;YAC9D,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,UAAU,CAAC;SAC7C;;QAGD,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,CACd,CAAC;AAEF,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CACxB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,CAClB,CAAC;QAEF,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAEM,MAAM,CAAC,KAAa,EAAE,MAAc,EAAA;AACzC,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAEM,OAAO,GAAA;AACZ,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpD;KACF;;AAIM,IAAA,UAAU,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AACrC,IAAA,WAAW,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC/C;;MC9eY,wBAAwB,CAAA;IAInC,WAAY,CAAA,KAA2B,EAAE,OAAsC,EAAA;AAC7E,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,aAAa,GAAG,OAAO,IAAI,EAAE,CAAC;KACpC;AAED,IAAA,OAAO,CAAC,IAA2B,EAAA;;QAEjC,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK;YACnC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI;YAC1E,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,GAAG,EAAE,CAAC,CAAC,GAAG;YACV,KAAK,EAAE,CAAC,CAAC,KAAK;AACd,YAAA,SAAS,EAAE,CAAC,CAAC,SAAS,IAAI,EAAE;AAC7B,SAAA,CAAC,CAAC,CAAC;AACJ,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;KACnC;AAED,IAAA,MAAM,CAAC,IAAyB,EAAA;;AAE9B,QAAA,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACtB;IAED,IAAI,GAAA;;AAEF,QAAA,OAAO,EAAE,CAAC;KACX;AAED,IAAA,YAAY,CAAC,OAAqC,EAAA;AAChD,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,OAAO,EAAE,CAAC;KAC5D;IAED,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAED,UAAU,GAAA;QACR,OAAO;AACL,YAAA,YAAY,EAAE,MAAK,GAAG;AACtB,YAAA,OAAO,EAAE,OAAO,EAAE,CAAC;AACnB,YAAA,KAAK,EAAE,MAAM,EAAE;AACf,YAAA,MAAM,EAAE,MAAM,CAAC;AACf,YAAA,OAAO,EAAE,MAAM,KAAK;AACpB,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,iBAAiB,EAAE,MAAM,IAAI;SAC9B,CAAC;KACH;IAED,OAAO,GAAA;AACL,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,UAAU,CAAC,OAAgB,EAAA;;KAE1B;AACF;;MC7DY,YAAY,CAAA;AAGvB,IAAA,WAAA,CAAY,KAA2B,EAAA;AACrC,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;AAED,IAAA,YAAY,CAAC,OAAyB,EAAA;;KAErC;IAED,OAAO,GAAA;QACL,OAAO;AACL,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,WAAW,EAAE,IAAI;AACjB,YAAA,UAAU,EAAE,EAAE;SACf,CAAC;KACH;IAED,gBAAgB,CAAC,QAAgB,EAAE,QAAkB,EAAA;;KAEpD;IAED,gBAAgB,GAAA;;KAEf;IAED,eAAe,GAAA;AACb,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,eAAe,CAAC,KAAqB,EAAA;;KAEpC;IAED,cAAc,GAAA;;KAEb;IAED,UAAU,GAAA;;KAET;AAED,IAAA,gBAAgB,CAAC,IAAqB,EAAA;AACpC,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,gBAAgB,CAAC,UAAkB,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC;KACb;AACF;;MClDY,aAAa,CAAA;AAGxB,IAAA,WAAA,CAAY,KAA2B,EAAA;AACrC,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;AAED,IAAA,YAAY,CAAC,OAA0B,EAAA;;KAEtC;IAED,OAAO,GAAA;QACL,OAAO;AACL,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,SAAS,EAAE,IAAI;SAChB,CAAC;KACH;IAED,KAAK,GAAA;AACH,QAAA,OAAO,EAAE,CAAC;KACX;IAED,MAAM,GAAA;QACJ,OAAO,CAAC,CAAC;KACV;IAED,OAAO,GAAA;AACL,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,iBAAiB,CAAC,KAAa,EAAA;QAC7B,OAAO,IAAI,CAAC;KACb;AAED,IAAA,iBAAiB,CAAC,UAAkB,EAAA;QAClC,OAAO,IAAI,CAAC;KACb;AACF;;MC/BY,QAAQ,CAAA;IAMnB,WAAY,CAAA,SAAsB,EAAE,OAAqB,EAAA;;QAJjD,IAAM,CAAA,MAAA,GAAiB,EAAE,CAAC;;AAMhC,QAAA,MAAM,UAAU,GAAG;YACjB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;AACtB,YAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI;AAClD,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,CAAC;AACf,YAAA,YAAY,EAAE,CAAC;AACf,YAAA,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;SACnD,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,IAAIA,KAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpD;AAED,IAAA,wBAAwB,CAAC,OAAsC,EAAA;QAC7D,MAAM,SAAS,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACpE,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,QAAA,OAAO,SAAS,CAAC;KAClB;AAED,IAAA,YAAY,CAAC,SAA0B,EAAA;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC7C,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC9B;KACF;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAED,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;AAED,IAAA,YAAY,CAAC,OAAqB,EAAA;;;AAEhC,QAAA,MAAM,UAAU,GAAG;YACjB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;AACtB,YAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI;SACnD,CAAC;AACF,QAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;KACtC;IAED,OAAO,GAAA;QACL,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACrC,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;AACnB,YAAA,IAAI,EAAE;gBACJ,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE;AACjD,aAAA;SACF,CAAC;KACH;IAED,MAAM,CAAC,KAAa,EAAE,MAAc,EAAA;QAClC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAClC;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;KACtB;AACF;;AC/Ee,SAAA,WAAW,CAAC,SAAsB,EAAE,OAAqB,EAAA;AACvE,IAAA,OAAO,IAAI,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC1C;;;;"}